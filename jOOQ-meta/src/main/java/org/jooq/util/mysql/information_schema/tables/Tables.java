/**
 * This class is generated by jOOQ
 */
package org.jooq.util.mysql.information_schema.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.mysql.information_schema.InformationSchema;
import org.jooq.util.mysql.information_schema.tables.records.TablesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Tables extends TableImpl<TablesRecord> {

	private static final long serialVersionUID = 1094260777;

	/**
	 * The singleton instance of TABLES
	 */
	public static final Tables TABLES = new Tables();

	/**
	 * The class holding records for this type
	 */
	private static final Class<TablesRecord> __RECORD_TYPE = TablesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TablesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_CATALOG = new TableFieldImpl<TablesRecord, String>("TABLE_CATALOG", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_SCHEMA = new TableFieldImpl<TablesRecord, String>("TABLE_SCHEMA", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_NAME = new TableFieldImpl<TablesRecord, String>("TABLE_NAME", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_TYPE = new TableFieldImpl<TablesRecord, String>("TABLE_TYPE", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ENGINE = new TableFieldImpl<TablesRecord, String>("ENGINE", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> VERSION = new TableFieldImpl<TablesRecord, Long>("VERSION", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROW_FORMAT = new TableFieldImpl<TablesRecord, String>("ROW_FORMAT", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> TABLE_ROWS = new TableFieldImpl<TablesRecord, Long>("TABLE_ROWS", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> AVG_ROW_LENGTH = new TableFieldImpl<TablesRecord, Long>("AVG_ROW_LENGTH", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> DATA_LENGTH = new TableFieldImpl<TablesRecord, Long>("DATA_LENGTH", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> MAX_DATA_LENGTH = new TableFieldImpl<TablesRecord, Long>("MAX_DATA_LENGTH", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> INDEX_LENGTH = new TableFieldImpl<TablesRecord, Long>("INDEX_LENGTH", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> DATA_FREE = new TableFieldImpl<TablesRecord, Long>("DATA_FREE", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> AUTO_INCREMENT = new TableFieldImpl<TablesRecord, Long>("AUTO_INCREMENT", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> CREATE_TIME = new TableFieldImpl<TablesRecord, Timestamp>("CREATE_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> UPDATE_TIME = new TableFieldImpl<TablesRecord, Timestamp>("UPDATE_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> CHECK_TIME = new TableFieldImpl<TablesRecord, Timestamp>("CHECK_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_COLLATION = new TableFieldImpl<TablesRecord, String>("TABLE_COLLATION", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> CHECKSUM = new TableFieldImpl<TablesRecord, Long>("CHECKSUM", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> CREATE_OPTIONS = new TableFieldImpl<TablesRecord, String>("CREATE_OPTIONS", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_COMMENT = new TableFieldImpl<TablesRecord, String>("TABLE_COMMENT", SQLDataType.VARCHAR, TABLES);

	/**
	 * No further instances allowed
	 */
	private Tables() {
		super("TABLES", InformationSchema.INFORMATION_SCHEMA);
	}
}
