/**
 * This class is generated by jOOQ
 */
package org.jooq.util.ingres.ingres.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.ingres.IngresDataType;
import org.jooq.util.ingres.ingres.$ingres;
import org.jooq.util.ingres.ingres.tables.records.IitablesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Iitables extends TableImpl<IitablesRecord> {

	private static final long serialVersionUID = 2005682780;

	/**
	 * The singleton instance of iitables
	 */
	public static final Iitables IITABLES = new Iitables();

	/**
	 * The class holding records for this type
	 */
	private static final Class<IitablesRecord> __RECORD_TYPE = IitablesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<IitablesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_NAME = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_name", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_OWNER = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_owner", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> CREATE_DATE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "create_date", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> ALTER_DATE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "alter_date", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_TYPE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_type", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_SUBTYPE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_subtype", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_VERSION = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_version", IngresDataType.VARCHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> SYSTEM_USE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "system_use", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_STATS = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_stats", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_INDEXES = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_indexes", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> IS_READONLY = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "is_readonly", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> CONCURRENT_ACCESS = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "concurrent_access", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> NUM_ROWS = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "num_rows", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> STORAGE_STRUCTURE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "storage_structure", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> IS_COMPRESSED = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "is_compressed", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> KEY_IS_COMPRESSED = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "key_is_compressed", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> DUPLICATE_ROWS = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "duplicate_rows", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> UNIQUE_RULE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "unique_rule", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> NUMBER_PAGES = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "number_pages", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> OVERFLOW_PAGES = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "overflow_pages", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> ROW_WIDTH = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "row_width", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> EXPIRE_DATE = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "expire_date", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> MODIFY_DATE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "modify_date", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> LOCATION_NAME = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "location_name", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_INTEGRITIES = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_integrities", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> TABLE_PERMITS = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "table_permits", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> ALL_TO_ALL = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "all_to_all", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> RET_TO_ALL = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "ret_to_all", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> IS_JOURNALLED = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "is_journalled", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> VIEW_BASE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "view_base", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> MULTI_LOCATIONS = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "multi_locations", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_IFILLPCT = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_ifillpct", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_DFILLPCT = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_dfillpct", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_LFILLPCT = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_lfillpct", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_MINPAGES = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_minpages", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_MAXPAGES = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_maxpages", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELSTAMP1 = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_relstamp1", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELSTAMP2 = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_relstamp2", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELTID = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_reltid", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELTIDX = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_reltidx", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> UNIQUE_SCOPE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "unique_scope", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> ALLOCATION_SIZE = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "allocation_size", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> EXTEND_SIZE = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "extend_size", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> ALLOCATED_PAGES = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "allocated_pages", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> LABEL_GRANULARITY = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "label_granularity", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> ROW_SECURITY_AUDIT = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "row_security_audit", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> SECURITY_LABEL = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "security_label", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_PAGESIZE = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_pagesize", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELVERSION = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_relversion", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELTOTWID = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_reltotwid", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELTCPRI = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_reltcpri", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TUPS_PER_PAGE = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "tups_per_page", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> KEYS_PER_PAGE = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "keys_per_page", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> KEYS_PER_LEAF = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "keys_per_leaf", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> PHYS_PARTITIONS = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "phys_partitions", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> PARTITION_DIMENSIONS = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "partition_dimensions", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELDATAWID = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_reldatawid", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> TABLE_RELTOTDATAWID = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "table_reltotdatawid", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> ENCRYPTED_COLUMNS = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "encrypted_columns", IngresDataType.CHAR, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, Integer> ENCRYPTION_VERSION = new TableFieldImpl<IitablesRecord, Integer>(SQLDialect.INGRES, "encryption_version", IngresDataType.INTEGER, IITABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<IitablesRecord, String> ENCRYPTION_TYPE = new TableFieldImpl<IitablesRecord, String>(SQLDialect.INGRES, "encryption_type", IngresDataType.VARCHAR, IITABLES);

	/**
	 * No further instances allowed
	 */
	private Iitables() {
		super(SQLDialect.INGRES, "iitables", $ingres.$INGRES);
	}
}
