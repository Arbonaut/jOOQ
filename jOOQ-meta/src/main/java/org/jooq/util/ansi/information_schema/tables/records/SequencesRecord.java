/**
 * This class is generated by jOOQ
 */
package org.jooq.util.ansi.information_schema.tables.records;


import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;
import org.jooq.util.ansi.information_schema.tables.Sequences;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class SequencesRecord extends TableRecordImpl<SequencesRecord> {

	private static final long serialVersionUID = 632273557;

	/**
	 * An uncommented item
	 */
	public void setSequenceCatalog(String value) {
		setValue(Sequences.SEQUENCE_CATALOG, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSequenceCatalog() {
		return getValue(Sequences.SEQUENCE_CATALOG);
	}

	/**
	 * An uncommented item
	 */
	public void setSequenceSchema(String value) {
		setValue(Sequences.SEQUENCE_SCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSequenceSchema() {
		return getValue(Sequences.SEQUENCE_SCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setSequenceName(String value) {
		setValue(Sequences.SEQUENCE_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSequenceName() {
		return getValue(Sequences.SEQUENCE_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setDataType(String value) {
		setValue(Sequences.DATA_TYPE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getDataType() {
		return getValue(Sequences.DATA_TYPE);
	}

	/**
	 * An uncommented item
	 */
	public void setNumericPrecision(Long value) {
		setValue(Sequences.NUMERIC_PRECISION, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getNumericPrecision() {
		return getValue(Sequences.NUMERIC_PRECISION);
	}

	/**
	 * An uncommented item
	 */
	public void setNumericPrecisionRadix(Long value) {
		setValue(Sequences.NUMERIC_PRECISION_RADIX, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getNumericPrecisionRadix() {
		return getValue(Sequences.NUMERIC_PRECISION_RADIX);
	}

	/**
	 * An uncommented item
	 */
	public void setNumericScale(Long value) {
		setValue(Sequences.NUMERIC_SCALE, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getNumericScale() {
		return getValue(Sequences.NUMERIC_SCALE);
	}

	/**
	 * An uncommented item
	 */
	public void setMaximumValue(String value) {
		setValue(Sequences.MAXIMUM_VALUE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getMaximumValue() {
		return getValue(Sequences.MAXIMUM_VALUE);
	}

	/**
	 * An uncommented item
	 */
	public void setMinimumValue(String value) {
		setValue(Sequences.MINIMUM_VALUE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getMinimumValue() {
		return getValue(Sequences.MINIMUM_VALUE);
	}

	/**
	 * An uncommented item
	 */
	public void setIncrement(String value) {
		setValue(Sequences.INCREMENT, value);
	}

	/**
	 * An uncommented item
	 */
	public String getIncrement() {
		return getValue(Sequences.INCREMENT);
	}

	/**
	 * An uncommented item
	 */
	public void setCycleOption(String value) {
		setValue(Sequences.CYCLE_OPTION, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCycleOption() {
		return getValue(Sequences.CYCLE_OPTION);
	}

	/**
	 * An uncommented item
	 */
	public void setDeclaredDataType(String value) {
		setValue(Sequences.DECLARED_DATA_TYPE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getDeclaredDataType() {
		return getValue(Sequences.DECLARED_DATA_TYPE);
	}

	/**
	 * An uncommented item
	 */
	public void setDeclaredNumericPrecision(Long value) {
		setValue(Sequences.DECLARED_NUMERIC_PRECISION, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getDeclaredNumericPrecision() {
		return getValue(Sequences.DECLARED_NUMERIC_PRECISION);
	}

	/**
	 * An uncommented item
	 */
	public void setDeclaredNumericScale(Long value) {
		setValue(Sequences.DECLARED_NUMERIC_SCALE, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getDeclaredNumericScale() {
		return getValue(Sequences.DECLARED_NUMERIC_SCALE);
	}

	/**
	 * An uncommented item
	 */
	public void setStartWith(String value) {
		setValue(Sequences.START_WITH, value);
	}

	/**
	 * An uncommented item
	 */
	public String getStartWith() {
		return getValue(Sequences.START_WITH);
	}

	/**
	 * An uncommented item
	 */
	public void setNextValue(String value) {
		setValue(Sequences.NEXT_VALUE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getNextValue() {
		return getValue(Sequences.NEXT_VALUE);
	}
	/**
	 * Create a detached SequencesRecord
	 */
	public SequencesRecord() {
		super(Sequences.SEQUENCES);
	}
}
