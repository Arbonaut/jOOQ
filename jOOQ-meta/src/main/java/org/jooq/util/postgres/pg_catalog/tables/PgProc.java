/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.pg_catalog.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.postgres.pg_catalog.PgCatalog;
import org.jooq.util.postgres.pg_catalog.tables.records.PgProcRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class PgProc extends TableImpl<PgProcRecord> {

	private static final long serialVersionUID = -584147923;

	/**
	 * The singleton instance of pg_proc
	 */
	public static final PgProc PG_PROC = new PgProc();

	/**
	 * The class holding records for this type
	 */
	private static final Class<PgProcRecord> __RECORD_TYPE = PgProcRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PgProcRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PRONAME = new TableFieldImpl<PgProcRecord, String>("proname", SQLDataType.VARCHAR, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PRONAMESPACE = new TableFieldImpl<PgProcRecord, Long>("pronamespace", SQLDataType.BIGINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PROOWNER = new TableFieldImpl<PgProcRecord, Long>("proowner", SQLDataType.BIGINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PROLANG = new TableFieldImpl<PgProcRecord, Long>("prolang", SQLDataType.BIGINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Float> PROCOST = new TableFieldImpl<PgProcRecord, Float>("procost", SQLDataType.REAL, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Float> PROROWS = new TableFieldImpl<PgProcRecord, Float>("prorows", SQLDataType.REAL, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PROVARIADIC = new TableFieldImpl<PgProcRecord, Long>("provariadic", SQLDataType.BIGINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROISAGG = new TableFieldImpl<PgProcRecord, Boolean>("proisagg", SQLDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROISWINDOW = new TableFieldImpl<PgProcRecord, Boolean>("proiswindow", SQLDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROSECDEF = new TableFieldImpl<PgProcRecord, Boolean>("prosecdef", SQLDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROISSTRICT = new TableFieldImpl<PgProcRecord, Boolean>("proisstrict", SQLDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PRORETSET = new TableFieldImpl<PgProcRecord, Boolean>("proretset", SQLDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROVOLATILE = new TableFieldImpl<PgProcRecord, String>("provolatile", SQLDataType.CHAR, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Short> PRONARGS = new TableFieldImpl<PgProcRecord, Short>("pronargs", SQLDataType.SMALLINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Short> PRONARGDEFAULTS = new TableFieldImpl<PgProcRecord, Short>("pronargdefaults", SQLDataType.SMALLINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PRORETTYPE = new TableFieldImpl<PgProcRecord, Long>("prorettype", SQLDataType.BIGINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long[]> PROARGTYPES = new TableFieldImpl<PgProcRecord, Long[]>("proargtypes", SQLDataType.BIGINT.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long[]> PROALLARGTYPES = new TableFieldImpl<PgProcRecord, Long[]>("proallargtypes", SQLDataType.BIGINT.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROARGMODES = new TableFieldImpl<PgProcRecord, String[]>("proargmodes", SQLDataType.CHAR.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROARGNAMES = new TableFieldImpl<PgProcRecord, String[]>("proargnames", SQLDataType.CLOB.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROARGDEFAULTS = new TableFieldImpl<PgProcRecord, String>("proargdefaults", SQLDataType.CLOB, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROSRC = new TableFieldImpl<PgProcRecord, String>("prosrc", SQLDataType.CLOB, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROBIN = new TableFieldImpl<PgProcRecord, String>("probin", SQLDataType.CLOB, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROCONFIG = new TableFieldImpl<PgProcRecord, String[]>("proconfig", SQLDataType.CLOB.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROACL = new TableFieldImpl<PgProcRecord, String[]>("proacl", SQLDataType.VARCHAR.getArrayDataType(), PG_PROC);

	/**
	 * No further instances allowed
	 */
	private PgProc() {
		super("pg_proc", PgCatalog.PG_CATALOG);
	}
}
