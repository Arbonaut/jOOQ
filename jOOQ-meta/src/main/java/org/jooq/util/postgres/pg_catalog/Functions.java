/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.pg_catalog;


import java.sql.Connection;
import java.sql.SQLException;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.util.postgres.pg_catalog.functions.FormatType;


/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored functions in pg_catalog
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public final class Functions {

	/**
	 * Invoke FORMAT_TYPE
	 *
	 * @param __1
	 * @param __2
	 */
	public static String formatType(Connection connection, Long __1, Integer __2) throws SQLException {
		FormatType f = new FormatType();
		f.set__1(__1);
		f.set__2(__2);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get FORMAT_TYPE as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static Field<String> formatType(Long __1, Integer __2) {
		FormatType f = new FormatType();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * Get FORMAT_TYPE as a field
	 *
	 * @param __1
	 * @param __2
	 */
	public static Field<String> formatType(Field<Long> __1, Field<Integer> __2) {
		FormatType f = new FormatType();
		f.set__1(__1);
		f.set__2(__2);

		return f.asField();
	}

	/**
	 * No instances
	 */
	private Functions() {}
}
