/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.pg_catalog.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.postgres.PostgresDataType;
import org.jooq.util.postgres.pg_catalog.PgCatalog;
import org.jooq.util.postgres.pg_catalog.tables.records.PgAttributeRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class PgAttribute extends TableImpl<PgAttributeRecord> {

	private static final long serialVersionUID = 145656535;

	/**
	 * The singleton instance of pg_attribute
	 */
	public static final PgAttribute PG_ATTRIBUTE = new PgAttribute();

	/**
	 * The class holding records for this type
	 */
	private static final Class<PgAttributeRecord> __RECORD_TYPE = PgAttributeRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PgAttributeRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Long> ATTRELID = new TableFieldImpl<PgAttributeRecord, Long>(SQLDialect.POSTGRES, "attrelid", PostgresDataType.OID, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, String> ATTNAME = new TableFieldImpl<PgAttributeRecord, String>(SQLDialect.POSTGRES, "attname", PostgresDataType.NAME, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Long> ATTTYPID = new TableFieldImpl<PgAttributeRecord, Long>(SQLDialect.POSTGRES, "atttypid", PostgresDataType.OID, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Integer> ATTSTATTARGET = new TableFieldImpl<PgAttributeRecord, Integer>(SQLDialect.POSTGRES, "attstattarget", PostgresDataType.INTEGER, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Short> ATTLEN = new TableFieldImpl<PgAttributeRecord, Short>(SQLDialect.POSTGRES, "attlen", PostgresDataType.SMALLINT, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Short> ATTNUM = new TableFieldImpl<PgAttributeRecord, Short>(SQLDialect.POSTGRES, "attnum", PostgresDataType.SMALLINT, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Integer> ATTNDIMS = new TableFieldImpl<PgAttributeRecord, Integer>(SQLDialect.POSTGRES, "attndims", PostgresDataType.INTEGER, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Integer> ATTCACHEOFF = new TableFieldImpl<PgAttributeRecord, Integer>(SQLDialect.POSTGRES, "attcacheoff", PostgresDataType.INTEGER, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Integer> ATTTYPMOD = new TableFieldImpl<PgAttributeRecord, Integer>(SQLDialect.POSTGRES, "atttypmod", PostgresDataType.INTEGER, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Boolean> ATTBYVAL = new TableFieldImpl<PgAttributeRecord, Boolean>(SQLDialect.POSTGRES, "attbyval", PostgresDataType.BOOLEAN, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, String> ATTSTORAGE = new TableFieldImpl<PgAttributeRecord, String>(SQLDialect.POSTGRES, "attstorage", PostgresDataType.CHAR, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, String> ATTALIGN = new TableFieldImpl<PgAttributeRecord, String>(SQLDialect.POSTGRES, "attalign", PostgresDataType.CHAR, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Boolean> ATTNOTNULL = new TableFieldImpl<PgAttributeRecord, Boolean>(SQLDialect.POSTGRES, "attnotnull", PostgresDataType.BOOLEAN, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Boolean> ATTHASDEF = new TableFieldImpl<PgAttributeRecord, Boolean>(SQLDialect.POSTGRES, "atthasdef", PostgresDataType.BOOLEAN, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Boolean> ATTISDROPPED = new TableFieldImpl<PgAttributeRecord, Boolean>(SQLDialect.POSTGRES, "attisdropped", PostgresDataType.BOOLEAN, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Boolean> ATTISLOCAL = new TableFieldImpl<PgAttributeRecord, Boolean>(SQLDialect.POSTGRES, "attislocal", PostgresDataType.BOOLEAN, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, Integer> ATTINHCOUNT = new TableFieldImpl<PgAttributeRecord, Integer>(SQLDialect.POSTGRES, "attinhcount", PostgresDataType.INTEGER, PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, String[]> ATTACL = new TableFieldImpl<PgAttributeRecord, String[]>(SQLDialect.POSTGRES, "attacl", PostgresDataType.ACLITEM.getArrayDataType(), PG_ATTRIBUTE);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgAttributeRecord, String[]> ATTOPTIONS = new TableFieldImpl<PgAttributeRecord, String[]>(SQLDialect.POSTGRES, "attoptions", PostgresDataType.TEXT.getArrayDataType(), PG_ATTRIBUTE);

	/**
	 * No further instances allowed
	 */
	private PgAttribute() {
		super(SQLDialect.POSTGRES, "pg_attribute", PgCatalog.PG_CATALOG);
	}
}
