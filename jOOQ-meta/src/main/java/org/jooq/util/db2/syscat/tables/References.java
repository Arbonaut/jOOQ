/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.ReferencesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class References extends TableImpl<ReferencesRecord> {

	private static final long serialVersionUID = 97635108;

	/**
	 * The singleton instance of REFERENCES
	 */
	public static final References REFERENCES = new References();

	/**
	 * The class holding records for this type
	 */
	private static final Class<ReferencesRecord> __RECORD_TYPE = ReferencesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ReferencesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> CONSTNAME = new TableFieldImpl<ReferencesRecord, String>("CONSTNAME", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> TABSCHEMA = new TableFieldImpl<ReferencesRecord, String>("TABSCHEMA", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> TABNAME = new TableFieldImpl<ReferencesRecord, String>("TABNAME", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> OWNER = new TableFieldImpl<ReferencesRecord, String>("OWNER", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> OWNERTYPE = new TableFieldImpl<ReferencesRecord, String>("OWNERTYPE", SQLDataType.CHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> REFKEYNAME = new TableFieldImpl<ReferencesRecord, String>("REFKEYNAME", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> REFTABSCHEMA = new TableFieldImpl<ReferencesRecord, String>("REFTABSCHEMA", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> REFTABNAME = new TableFieldImpl<ReferencesRecord, String>("REFTABNAME", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, Short> COLCOUNT = new TableFieldImpl<ReferencesRecord, Short>("COLCOUNT", SQLDataType.SMALLINT, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> DELETERULE = new TableFieldImpl<ReferencesRecord, String>("DELETERULE", SQLDataType.CHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> UPDATERULE = new TableFieldImpl<ReferencesRecord, String>("UPDATERULE", SQLDataType.CHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, Timestamp> CREATE_TIME = new TableFieldImpl<ReferencesRecord, Timestamp>("CREATE_TIME", SQLDataType.TIMESTAMP, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> FK_COLNAMES = new TableFieldImpl<ReferencesRecord, String>("FK_COLNAMES", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> PK_COLNAMES = new TableFieldImpl<ReferencesRecord, String>("PK_COLNAMES", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ReferencesRecord, String> DEFINER = new TableFieldImpl<ReferencesRecord, String>("DEFINER", SQLDataType.VARCHAR, REFERENCES);

	/**
	 * No further instances allowed
	 */
	private References() {
		super("REFERENCES", Syscat.SYSCAT);
	}
}
