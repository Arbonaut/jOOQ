/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.DB2DataType;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.KeycoluseRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Keycoluse extends TableImpl<KeycoluseRecord> {

	private static final long serialVersionUID = -358991041;

	/**
	 * The singleton instance of KEYCOLUSE
	 */
	public static final Keycoluse KEYCOLUSE = new Keycoluse();

	/**
	 * The class holding records for this type
	 */
	private static final Class<KeycoluseRecord> __RECORD_TYPE = KeycoluseRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<KeycoluseRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<KeycoluseRecord, String> CONSTNAME = new TableFieldImpl<KeycoluseRecord, String>(SQLDialect.DB2, "CONSTNAME", DB2DataType.VARCHAR, KEYCOLUSE);

	/**
	 * An uncommented item
	 */
	public static final TableField<KeycoluseRecord, String> TABSCHEMA = new TableFieldImpl<KeycoluseRecord, String>(SQLDialect.DB2, "TABSCHEMA", DB2DataType.VARCHAR, KEYCOLUSE);

	/**
	 * An uncommented item
	 */
	public static final TableField<KeycoluseRecord, String> TABNAME = new TableFieldImpl<KeycoluseRecord, String>(SQLDialect.DB2, "TABNAME", DB2DataType.VARCHAR, KEYCOLUSE);

	/**
	 * An uncommented item
	 */
	public static final TableField<KeycoluseRecord, String> COLNAME = new TableFieldImpl<KeycoluseRecord, String>(SQLDialect.DB2, "COLNAME", DB2DataType.VARCHAR, KEYCOLUSE);

	/**
	 * An uncommented item
	 */
	public static final TableField<KeycoluseRecord, Short> COLSEQ = new TableFieldImpl<KeycoluseRecord, Short>(SQLDialect.DB2, "COLSEQ", DB2DataType.SMALLINT, KEYCOLUSE);

	/**
	 * No further instances allowed
	 */
	private Keycoluse() {
		super(SQLDialect.DB2, "KEYCOLUSE", Syscat.SYSCAT);
	}
}
