/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import java.sql.Date;
import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.TablesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Tables extends TableImpl<TablesRecord> {

	private static final long serialVersionUID = -66278923;

	/**
	 * The singleton instance of TABLES
	 */
	public static final Tables TABLES = new Tables();

	/**
	 * The class holding records for this type
	 */
	private static final Class<TablesRecord> __RECORD_TYPE = TablesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TablesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABSCHEMA = new TableFieldImpl<TablesRecord, String>("TABSCHEMA", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABNAME = new TableFieldImpl<TablesRecord, String>("TABNAME", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> OWNER = new TableFieldImpl<TablesRecord, String>("OWNER", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> OWNERTYPE = new TableFieldImpl<TablesRecord, String>("OWNERTYPE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TYPE = new TableFieldImpl<TablesRecord, String>("TYPE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> STATUS = new TableFieldImpl<TablesRecord, String>("STATUS", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> BASE_TABSCHEMA = new TableFieldImpl<TablesRecord, String>("BASE_TABSCHEMA", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> BASE_TABNAME = new TableFieldImpl<TablesRecord, String>("BASE_TABNAME", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROWTYPESCHEMA = new TableFieldImpl<TablesRecord, String>("ROWTYPESCHEMA", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROWTYPENAME = new TableFieldImpl<TablesRecord, String>("ROWTYPENAME", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> CREATE_TIME = new TableFieldImpl<TablesRecord, Timestamp>("CREATE_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> ALTER_TIME = new TableFieldImpl<TablesRecord, Timestamp>("ALTER_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> INVALIDATE_TIME = new TableFieldImpl<TablesRecord, Timestamp>("INVALIDATE_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> STATS_TIME = new TableFieldImpl<TablesRecord, Timestamp>("STATS_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> COLCOUNT = new TableFieldImpl<TablesRecord, Short>("COLCOUNT", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> TABLEID = new TableFieldImpl<TablesRecord, Short>("TABLEID", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> TBSPACEID = new TableFieldImpl<TablesRecord, Short>("TBSPACEID", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> CARD = new TableFieldImpl<TablesRecord, Long>("CARD", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> NPAGES = new TableFieldImpl<TablesRecord, Long>("NPAGES", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> FPAGES = new TableFieldImpl<TablesRecord, Long>("FPAGES", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> OVERFLOW = new TableFieldImpl<TablesRecord, Long>("OVERFLOW", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TBSPACE = new TableFieldImpl<TablesRecord, String>("TBSPACE", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> INDEX_TBSPACE = new TableFieldImpl<TablesRecord, String>("INDEX_TBSPACE", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LONG_TBSPACE = new TableFieldImpl<TablesRecord, String>("LONG_TBSPACE", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PARENTS = new TableFieldImpl<TablesRecord, Short>("PARENTS", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> CHILDREN = new TableFieldImpl<TablesRecord, Short>("CHILDREN", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> SELFREFS = new TableFieldImpl<TablesRecord, Short>("SELFREFS", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> KEYCOLUMNS = new TableFieldImpl<TablesRecord, Short>("KEYCOLUMNS", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> KEYINDEXID = new TableFieldImpl<TablesRecord, Short>("KEYINDEXID", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> KEYUNIQUE = new TableFieldImpl<TablesRecord, Short>("KEYUNIQUE", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> CHECKCOUNT = new TableFieldImpl<TablesRecord, Short>("CHECKCOUNT", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> DATACAPTURE = new TableFieldImpl<TablesRecord, String>("DATACAPTURE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> CONST_CHECKED = new TableFieldImpl<TablesRecord, String>("CONST_CHECKED", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PMAP_ID = new TableFieldImpl<TablesRecord, Short>("PMAP_ID", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> PARTITION_MODE = new TableFieldImpl<TablesRecord, String>("PARTITION_MODE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOG_ATTRIBUTE = new TableFieldImpl<TablesRecord, String>("LOG_ATTRIBUTE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PCTFREE = new TableFieldImpl<TablesRecord, Short>("PCTFREE", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> APPEND_MODE = new TableFieldImpl<TablesRecord, String>("APPEND_MODE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> REFRESH = new TableFieldImpl<TablesRecord, String>("REFRESH", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> REFRESH_TIME = new TableFieldImpl<TablesRecord, Timestamp>("REFRESH_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOCKSIZE = new TableFieldImpl<TablesRecord, String>("LOCKSIZE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> VOLATILE = new TableFieldImpl<TablesRecord, String>("VOLATILE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROW_FORMAT = new TableFieldImpl<TablesRecord, String>("ROW_FORMAT", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> PROPERTY = new TableFieldImpl<TablesRecord, String>("PROPERTY", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> STATISTICS_PROFILE = new TableFieldImpl<TablesRecord, String>("STATISTICS_PROFILE", SQLDataType.CLOB, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COMPRESSION = new TableFieldImpl<TablesRecord, String>("COMPRESSION", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ACCESS_MODE = new TableFieldImpl<TablesRecord, String>("ACCESS_MODE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> CLUSTERED = new TableFieldImpl<TablesRecord, String>("CLUSTERED", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> ACTIVE_BLOCKS = new TableFieldImpl<TablesRecord, Long>("ACTIVE_BLOCKS", SQLDataType.BIGINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> DROPRULE = new TableFieldImpl<TablesRecord, String>("DROPRULE", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> MAXFREESPACESEARCH = new TableFieldImpl<TablesRecord, Short>("MAXFREESPACESEARCH", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> AVGCOMPRESSEDROWSIZE = new TableFieldImpl<TablesRecord, Short>("AVGCOMPRESSEDROWSIZE", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Float> AVGROWCOMPRESSIONRATIO = new TableFieldImpl<TablesRecord, Float>("AVGROWCOMPRESSIONRATIO", SQLDataType.REAL, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> AVGROWSIZE = new TableFieldImpl<TablesRecord, Short>("AVGROWSIZE", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Float> PCTROWSCOMPRESSED = new TableFieldImpl<TablesRecord, Float>("PCTROWSCOMPRESSED", SQLDataType.REAL, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOGINDEXBUILD = new TableFieldImpl<TablesRecord, String>("LOGINDEXBUILD", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> CODEPAGE = new TableFieldImpl<TablesRecord, Short>("CODEPAGE", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONSCHEMA = new TableFieldImpl<TablesRecord, String>("COLLATIONSCHEMA", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONNAME = new TableFieldImpl<TablesRecord, String>("COLLATIONNAME", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONSCHEMA_ORDERBY = new TableFieldImpl<TablesRecord, String>("COLLATIONSCHEMA_ORDERBY", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONNAME_ORDERBY = new TableFieldImpl<TablesRecord, String>("COLLATIONNAME_ORDERBY", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ENCODING_SCHEME = new TableFieldImpl<TablesRecord, String>("ENCODING_SCHEME", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PCTPAGESSAVED = new TableFieldImpl<TablesRecord, Short>("PCTPAGESSAVED", SQLDataType.SMALLINT, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> LAST_REGEN_TIME = new TableFieldImpl<TablesRecord, Timestamp>("LAST_REGEN_TIME", SQLDataType.TIMESTAMP, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Integer> SECPOLICYID = new TableFieldImpl<TablesRecord, Integer>("SECPOLICYID", SQLDataType.INTEGER, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> PROTECTIONGRANULARITY = new TableFieldImpl<TablesRecord, String>("PROTECTIONGRANULARITY", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Integer> AUDITPOLICYID = new TableFieldImpl<TablesRecord, Integer>("AUDITPOLICYID", SQLDataType.INTEGER, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> AUDITPOLICYNAME = new TableFieldImpl<TablesRecord, String>("AUDITPOLICYNAME", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> DEFINER = new TableFieldImpl<TablesRecord, String>("DEFINER", SQLDataType.VARCHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ONCOMMIT = new TableFieldImpl<TablesRecord, String>("ONCOMMIT", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOGGED = new TableFieldImpl<TablesRecord, String>("LOGGED", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ONROLLBACK = new TableFieldImpl<TablesRecord, String>("ONROLLBACK", SQLDataType.CHAR, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Date> LASTUSED = new TableFieldImpl<TablesRecord, Date>("LASTUSED", SQLDataType.DATE, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> REMARKS = new TableFieldImpl<TablesRecord, String>("REMARKS", SQLDataType.VARCHAR, TABLES);

	/**
	 * No further instances allowed
	 */
	private Tables() {
		super("TABLES", Syscat.SYSCAT);
	}
}
