/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.FunctionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Functions extends TableImpl<FunctionsRecord> {

	private static final long serialVersionUID = 1058950055;

	/**
	 * The singleton instance of FUNCTIONS
	 */
	public static final Functions FUNCTIONS = new Functions();

	/**
	 * The class holding records for this type
	 */
	private static final Class<FunctionsRecord> __RECORD_TYPE = FunctionsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FunctionsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FUNCSCHEMA = new TableFieldImpl<FunctionsRecord, String>("FUNCSCHEMA", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FUNCNAME = new TableFieldImpl<FunctionsRecord, String>("FUNCNAME", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SPECIFICNAME = new TableFieldImpl<FunctionsRecord, String>("SPECIFICNAME", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> DEFINER = new TableFieldImpl<FunctionsRecord, String>("DEFINER", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Integer> FUNCID = new TableFieldImpl<FunctionsRecord, Integer>("FUNCID", SQLDataType.INTEGER, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> RETURN_TYPE = new TableFieldImpl<FunctionsRecord, Short>("RETURN_TYPE", SQLDataType.SMALLINT, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> ORIGIN = new TableFieldImpl<FunctionsRecord, String>("ORIGIN", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> TYPE = new TableFieldImpl<FunctionsRecord, String>("TYPE", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> METHOD = new TableFieldImpl<FunctionsRecord, String>("METHOD", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> EFFECT = new TableFieldImpl<FunctionsRecord, String>("EFFECT", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> PARM_COUNT = new TableFieldImpl<FunctionsRecord, Short>("PARM_COUNT", SQLDataType.SMALLINT, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> PARM_SIGNATURE = new TableFieldImpl<FunctionsRecord, String>("PARM_SIGNATURE", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Timestamp> CREATE_TIME = new TableFieldImpl<FunctionsRecord, Timestamp>("CREATE_TIME", SQLDataType.TIMESTAMP, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> QUALIFIER = new TableFieldImpl<FunctionsRecord, String>("QUALIFIER", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> WITH_FUNC_ACCESS = new TableFieldImpl<FunctionsRecord, String>("WITH_FUNC_ACCESS", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> TYPE_PRESERVING = new TableFieldImpl<FunctionsRecord, String>("TYPE_PRESERVING", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> VARIANT = new TableFieldImpl<FunctionsRecord, String>("VARIANT", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SIDE_EFFECTS = new TableFieldImpl<FunctionsRecord, String>("SIDE_EFFECTS", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FENCED = new TableFieldImpl<FunctionsRecord, String>("FENCED", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> NULLCALL = new TableFieldImpl<FunctionsRecord, String>("NULLCALL", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> CAST_FUNCTION = new TableFieldImpl<FunctionsRecord, String>("CAST_FUNCTION", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> ASSIGN_FUNCTION = new TableFieldImpl<FunctionsRecord, String>("ASSIGN_FUNCTION", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SCRATCHPAD = new TableFieldImpl<FunctionsRecord, String>("SCRATCHPAD", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FINAL_CALL = new TableFieldImpl<FunctionsRecord, String>("FINAL_CALL", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> PARALLELIZABLE = new TableFieldImpl<FunctionsRecord, String>("PARALLELIZABLE", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> CONTAINS_SQL = new TableFieldImpl<FunctionsRecord, String>("CONTAINS_SQL", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> DBINFO = new TableFieldImpl<FunctionsRecord, String>("DBINFO", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> RESULT_COLS = new TableFieldImpl<FunctionsRecord, Short>("RESULT_COLS", SQLDataType.SMALLINT, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> LANGUAGE = new TableFieldImpl<FunctionsRecord, String>("LANGUAGE", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> IMPLEMENTATION = new TableFieldImpl<FunctionsRecord, String>("IMPLEMENTATION", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> CLASS = new TableFieldImpl<FunctionsRecord, String>("CLASS", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> JAR_ID = new TableFieldImpl<FunctionsRecord, String>("JAR_ID", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> PARM_STYLE = new TableFieldImpl<FunctionsRecord, String>("PARM_STYLE", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SOURCE_SCHEMA = new TableFieldImpl<FunctionsRecord, String>("SOURCE_SCHEMA", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SOURCE_SPECIFIC = new TableFieldImpl<FunctionsRecord, String>("SOURCE_SPECIFIC", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> IOS_PER_INVOC = new TableFieldImpl<FunctionsRecord, Double>("IOS_PER_INVOC", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INSTS_PER_INVOC = new TableFieldImpl<FunctionsRecord, Double>("INSTS_PER_INVOC", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> IOS_PER_ARGBYTE = new TableFieldImpl<FunctionsRecord, Double>("IOS_PER_ARGBYTE", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INSTS_PER_ARGBYTE = new TableFieldImpl<FunctionsRecord, Double>("INSTS_PER_ARGBYTE", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> PERCENT_ARGBYTES = new TableFieldImpl<FunctionsRecord, Short>("PERCENT_ARGBYTES", SQLDataType.SMALLINT, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INITIAL_IOS = new TableFieldImpl<FunctionsRecord, Double>("INITIAL_IOS", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INITIAL_INSTS = new TableFieldImpl<FunctionsRecord, Double>("INITIAL_INSTS", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Long> CARDINALITY = new TableFieldImpl<FunctionsRecord, Long>("CARDINALITY", SQLDataType.BIGINT, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> IMPLEMENTED = new TableFieldImpl<FunctionsRecord, String>("IMPLEMENTED", SQLDataType.CHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> SELECTIVITY = new TableFieldImpl<FunctionsRecord, Double>("SELECTIVITY", SQLDataType.DOUBLE, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Integer> OVERRIDDEN_FUNCID = new TableFieldImpl<FunctionsRecord, Integer>("OVERRIDDEN_FUNCID", SQLDataType.INTEGER, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SUBJECT_TYPESCHEMA = new TableFieldImpl<FunctionsRecord, String>("SUBJECT_TYPESCHEMA", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SUBJECT_TYPENAME = new TableFieldImpl<FunctionsRecord, String>("SUBJECT_TYPENAME", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FUNC_PATH = new TableFieldImpl<FunctionsRecord, String>("FUNC_PATH", SQLDataType.CLOB, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> BODY = new TableFieldImpl<FunctionsRecord, String>("BODY", SQLDataType.CLOB, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> REMARKS = new TableFieldImpl<FunctionsRecord, String>("REMARKS", SQLDataType.VARCHAR, FUNCTIONS);

	/**
	 * No further instances allowed
	 */
	private Functions() {
		super("FUNCTIONS", Syscat.SYSCAT);
	}
}
