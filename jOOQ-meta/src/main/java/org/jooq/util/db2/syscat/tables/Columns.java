/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.ColumnsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Columns extends TableImpl<ColumnsRecord> {

	private static final long serialVersionUID = 177697036;

	/**
	 * The singleton instance of COLUMNS
	 */
	public static final Columns COLUMNS = new Columns();

	/**
	 * The class holding records for this type
	 */
	private static final Class<ColumnsRecord> __RECORD_TYPE = ColumnsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ColumnsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TABSCHEMA = new TableFieldImpl<ColumnsRecord, String>("TABSCHEMA", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TABNAME = new TableFieldImpl<ColumnsRecord, String>("TABNAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> COLNAME = new TableFieldImpl<ColumnsRecord, String>("COLNAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> COLNO = new TableFieldImpl<ColumnsRecord, Short>("COLNO", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TYPESCHEMA = new TableFieldImpl<ColumnsRecord, String>("TYPESCHEMA", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TYPENAME = new TableFieldImpl<ColumnsRecord, String>("TYPENAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Integer> LENGTH = new TableFieldImpl<ColumnsRecord, Integer>("LENGTH", SQLDataType.INTEGER, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> SCALE = new TableFieldImpl<ColumnsRecord, Short>("SCALE", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> DEFAULT = new TableFieldImpl<ColumnsRecord, String>("DEFAULT", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> NULLS = new TableFieldImpl<ColumnsRecord, String>("NULLS", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> CODEPAGE = new TableFieldImpl<ColumnsRecord, Short>("CODEPAGE", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> COLLATIONSCHEMA = new TableFieldImpl<ColumnsRecord, String>("COLLATIONSCHEMA", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> COLLATIONNAME = new TableFieldImpl<ColumnsRecord, String>("COLLATIONNAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> LOGGED = new TableFieldImpl<ColumnsRecord, String>("LOGGED", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> COMPACT = new TableFieldImpl<ColumnsRecord, String>("COMPACT", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Long> COLCARD = new TableFieldImpl<ColumnsRecord, Long>("COLCARD", SQLDataType.BIGINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> HIGH2KEY = new TableFieldImpl<ColumnsRecord, String>("HIGH2KEY", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> LOW2KEY = new TableFieldImpl<ColumnsRecord, String>("LOW2KEY", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Integer> AVGCOLLEN = new TableFieldImpl<ColumnsRecord, Integer>("AVGCOLLEN", SQLDataType.INTEGER, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> KEYSEQ = new TableFieldImpl<ColumnsRecord, Short>("KEYSEQ", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> PARTKEYSEQ = new TableFieldImpl<ColumnsRecord, Short>("PARTKEYSEQ", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> NQUANTILES = new TableFieldImpl<ColumnsRecord, Short>("NQUANTILES", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> NMOSTFREQ = new TableFieldImpl<ColumnsRecord, Short>("NMOSTFREQ", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Long> NUMNULLS = new TableFieldImpl<ColumnsRecord, Long>("NUMNULLS", SQLDataType.BIGINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TARGET_TYPESCHEMA = new TableFieldImpl<ColumnsRecord, String>("TARGET_TYPESCHEMA", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TARGET_TYPENAME = new TableFieldImpl<ColumnsRecord, String>("TARGET_TYPENAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> SCOPE_TABSCHEMA = new TableFieldImpl<ColumnsRecord, String>("SCOPE_TABSCHEMA", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> SCOPE_TABNAME = new TableFieldImpl<ColumnsRecord, String>("SCOPE_TABNAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> SOURCE_TABSCHEMA = new TableFieldImpl<ColumnsRecord, String>("SOURCE_TABSCHEMA", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> SOURCE_TABNAME = new TableFieldImpl<ColumnsRecord, String>("SOURCE_TABNAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> DL_FEATURES = new TableFieldImpl<ColumnsRecord, String>("DL_FEATURES", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> SPECIAL_PROPS = new TableFieldImpl<ColumnsRecord, String>("SPECIAL_PROPS", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> HIDDEN = new TableFieldImpl<ColumnsRecord, String>("HIDDEN", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Integer> INLINE_LENGTH = new TableFieldImpl<ColumnsRecord, Integer>("INLINE_LENGTH", SQLDataType.INTEGER, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> PCTINLINED = new TableFieldImpl<ColumnsRecord, Short>("PCTINLINED", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> IDENTITY = new TableFieldImpl<ColumnsRecord, String>("IDENTITY", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> ROWCHANGETIMESTAMP = new TableFieldImpl<ColumnsRecord, String>("ROWCHANGETIMESTAMP", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> GENERATED = new TableFieldImpl<ColumnsRecord, String>("GENERATED", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> TEXT = new TableFieldImpl<ColumnsRecord, String>("TEXT", SQLDataType.CLOB, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> COMPRESS = new TableFieldImpl<ColumnsRecord, String>("COMPRESS", SQLDataType.CHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Double> AVGDISTINCTPERPAGE = new TableFieldImpl<ColumnsRecord, Double>("AVGDISTINCTPERPAGE", SQLDataType.DOUBLE, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Double> PAGEVARIANCERATIO = new TableFieldImpl<ColumnsRecord, Double>("PAGEVARIANCERATIO", SQLDataType.DOUBLE, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> SUB_COUNT = new TableFieldImpl<ColumnsRecord, Short>("SUB_COUNT", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Short> SUB_DELIM_LENGTH = new TableFieldImpl<ColumnsRecord, Short>("SUB_DELIM_LENGTH", SQLDataType.SMALLINT, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, Integer> AVGCOLLENCHAR = new TableFieldImpl<ColumnsRecord, Integer>("AVGCOLLENCHAR", SQLDataType.INTEGER, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> IMPLICITVALUE = new TableFieldImpl<ColumnsRecord, String>("IMPLICITVALUE", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> SECLABELNAME = new TableFieldImpl<ColumnsRecord, String>("SECLABELNAME", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ColumnsRecord, String> REMARKS = new TableFieldImpl<ColumnsRecord, String>("REMARKS", SQLDataType.VARCHAR, COLUMNS);

	/**
	 * No further instances allowed
	 */
	private Columns() {
		super("COLUMNS", Syscat.SYSCAT);
	}
}
