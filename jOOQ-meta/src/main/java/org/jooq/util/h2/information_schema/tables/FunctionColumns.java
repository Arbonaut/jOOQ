/**
 * This class is generated by jOOQ
 */
package org.jooq.util.h2.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.h2.information_schema.InformationSchema;
import org.jooq.util.h2.information_schema.tables.records.FunctionColumnsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class FunctionColumns extends TableImpl<FunctionColumnsRecord> {

	private static final long serialVersionUID = -618937418;

	/**
	 * The singleton instance of FUNCTION_COLUMNS
	 */
	public static final FunctionColumns FUNCTION_COLUMNS = new FunctionColumns();

	/**
	 * The class holding records for this type
	 */
	private static final Class<FunctionColumnsRecord> __RECORD_TYPE = FunctionColumnsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FunctionColumnsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> ALIAS_CATALOG = new TableFieldImpl<FunctionColumnsRecord, String>("ALIAS_CATALOG", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> ALIAS_SCHEMA = new TableFieldImpl<FunctionColumnsRecord, String>("ALIAS_SCHEMA", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> ALIAS_NAME = new TableFieldImpl<FunctionColumnsRecord, String>("ALIAS_NAME", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> JAVA_CLASS = new TableFieldImpl<FunctionColumnsRecord, String>("JAVA_CLASS", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> JAVA_METHOD = new TableFieldImpl<FunctionColumnsRecord, String>("JAVA_METHOD", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Integer> COLUMN_COUNT = new TableFieldImpl<FunctionColumnsRecord, Integer>("COLUMN_COUNT", SQLDataType.INTEGER, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Integer> POS = new TableFieldImpl<FunctionColumnsRecord, Integer>("POS", SQLDataType.INTEGER, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> COLUMN_NAME = new TableFieldImpl<FunctionColumnsRecord, String>("COLUMN_NAME", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Integer> DATA_TYPE = new TableFieldImpl<FunctionColumnsRecord, Integer>("DATA_TYPE", SQLDataType.INTEGER, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> TYPE_NAME = new TableFieldImpl<FunctionColumnsRecord, String>("TYPE_NAME", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Integer> PRECISION = new TableFieldImpl<FunctionColumnsRecord, Integer>("PRECISION", SQLDataType.INTEGER, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Short> SCALE = new TableFieldImpl<FunctionColumnsRecord, Short>("SCALE", SQLDataType.SMALLINT, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Short> RADIX = new TableFieldImpl<FunctionColumnsRecord, Short>("RADIX", SQLDataType.SMALLINT, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Short> NULLABLE = new TableFieldImpl<FunctionColumnsRecord, Short>("NULLABLE", SQLDataType.SMALLINT, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, Short> COLUMN_TYPE = new TableFieldImpl<FunctionColumnsRecord, Short>("COLUMN_TYPE", SQLDataType.SMALLINT, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> REMARKS = new TableFieldImpl<FunctionColumnsRecord, String>("REMARKS", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionColumnsRecord, String> COLUMN_DEFAULT = new TableFieldImpl<FunctionColumnsRecord, String>("COLUMN_DEFAULT", SQLDataType.VARCHAR, FUNCTION_COLUMNS);

	/**
	 * No further instances allowed
	 */
	private FunctionColumns() {
		super("FUNCTION_COLUMNS", InformationSchema.INFORMATION_SCHEMA);
	}
}
