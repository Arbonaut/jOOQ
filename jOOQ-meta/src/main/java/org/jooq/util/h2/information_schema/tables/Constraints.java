/**
 * This class is generated by jOOQ
 */
package org.jooq.util.h2.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.h2.information_schema.InformationSchema;
import org.jooq.util.h2.information_schema.tables.records.ConstraintsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Constraints extends TableImpl<ConstraintsRecord> {

	private static final long serialVersionUID = 485654960;

	/**
	 * The singleton instance of CONSTRAINTS
	 */
	public static final Constraints CONSTRAINTS = new Constraints();

	/**
	 * The class holding records for this type
	 */
	private static final Class<ConstraintsRecord> __RECORD_TYPE = ConstraintsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ConstraintsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> CONSTRAINT_CATALOG = new TableFieldImpl<ConstraintsRecord, String>("CONSTRAINT_CATALOG", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> CONSTRAINT_SCHEMA = new TableFieldImpl<ConstraintsRecord, String>("CONSTRAINT_SCHEMA", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> CONSTRAINT_NAME = new TableFieldImpl<ConstraintsRecord, String>("CONSTRAINT_NAME", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> CONSTRAINT_TYPE = new TableFieldImpl<ConstraintsRecord, String>("CONSTRAINT_TYPE", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> TABLE_CATALOG = new TableFieldImpl<ConstraintsRecord, String>("TABLE_CATALOG", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> TABLE_SCHEMA = new TableFieldImpl<ConstraintsRecord, String>("TABLE_SCHEMA", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> TABLE_NAME = new TableFieldImpl<ConstraintsRecord, String>("TABLE_NAME", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> UNIQUE_INDEX_NAME = new TableFieldImpl<ConstraintsRecord, String>("UNIQUE_INDEX_NAME", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> CHECK_EXPRESSION = new TableFieldImpl<ConstraintsRecord, String>("CHECK_EXPRESSION", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> COLUMN_LIST = new TableFieldImpl<ConstraintsRecord, String>("COLUMN_LIST", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> REMARKS = new TableFieldImpl<ConstraintsRecord, String>("REMARKS", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, String> SQL = new TableFieldImpl<ConstraintsRecord, String>("SQL", SQLDataType.VARCHAR, CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<ConstraintsRecord, Integer> ID = new TableFieldImpl<ConstraintsRecord, Integer>("ID", SQLDataType.INTEGER, CONSTRAINTS);

	/**
	 * No further instances allowed
	 */
	private Constraints() {
		super("CONSTRAINTS", InformationSchema.INFORMATION_SCHEMA);
	}
}
