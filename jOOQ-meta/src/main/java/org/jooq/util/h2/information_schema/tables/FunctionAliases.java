/**
 * This class is generated by jOOQ
 */
package org.jooq.util.h2.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.h2.information_schema.InformationSchema;
import org.jooq.util.h2.information_schema.tables.records.FunctionAliasesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class FunctionAliases extends TableImpl<FunctionAliasesRecord> {

	private static final long serialVersionUID = -771783859;

	/**
	 * The singleton instance of FUNCTION_ALIASES
	 */
	public static final FunctionAliases FUNCTION_ALIASES = new FunctionAliases();

	/**
	 * The class holding records for this type
	 */
	private static final Class<FunctionAliasesRecord> __RECORD_TYPE = FunctionAliasesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FunctionAliasesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> ALIAS_CATALOG = new TableFieldImpl<FunctionAliasesRecord, String>("ALIAS_CATALOG", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> ALIAS_SCHEMA = new TableFieldImpl<FunctionAliasesRecord, String>("ALIAS_SCHEMA", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> ALIAS_NAME = new TableFieldImpl<FunctionAliasesRecord, String>("ALIAS_NAME", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> JAVA_CLASS = new TableFieldImpl<FunctionAliasesRecord, String>("JAVA_CLASS", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> JAVA_METHOD = new TableFieldImpl<FunctionAliasesRecord, String>("JAVA_METHOD", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, Integer> DATA_TYPE = new TableFieldImpl<FunctionAliasesRecord, Integer>("DATA_TYPE", SQLDataType.INTEGER, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, Integer> COLUMN_COUNT = new TableFieldImpl<FunctionAliasesRecord, Integer>("COLUMN_COUNT", SQLDataType.INTEGER, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, Short> RETURNS_RESULT = new TableFieldImpl<FunctionAliasesRecord, Short>("RETURNS_RESULT", SQLDataType.SMALLINT, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> REMARKS = new TableFieldImpl<FunctionAliasesRecord, String>("REMARKS", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, Integer> ID = new TableFieldImpl<FunctionAliasesRecord, Integer>("ID", SQLDataType.INTEGER, FUNCTION_ALIASES);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionAliasesRecord, String> SOURCE = new TableFieldImpl<FunctionAliasesRecord, String>("SOURCE", SQLDataType.VARCHAR, FUNCTION_ALIASES);

	/**
	 * No further instances allowed
	 */
	private FunctionAliases() {
		super("FUNCTION_ALIASES", InformationSchema.INFORMATION_SCHEMA);
	}
}
