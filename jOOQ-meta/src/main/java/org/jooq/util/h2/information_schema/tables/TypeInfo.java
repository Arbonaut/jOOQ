/**
 * This class is generated by jOOQ
 */
package org.jooq.util.h2.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.h2.information_schema.InformationSchema;
import org.jooq.util.h2.information_schema.tables.records.TypeInfoRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class TypeInfo extends TableImpl<TypeInfoRecord> {

	private static final long serialVersionUID = 626037148;

	/**
	 * The singleton instance of TYPE_INFO
	 */
	public static final TypeInfo TYPE_INFO = new TypeInfo();

	/**
	 * The class holding records for this type
	 */
	private static final Class<TypeInfoRecord> __RECORD_TYPE = TypeInfoRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TypeInfoRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, String> TYPE_NAME = new TableFieldImpl<TypeInfoRecord, String>("TYPE_NAME", SQLDataType.VARCHAR, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Integer> DATA_TYPE = new TableFieldImpl<TypeInfoRecord, Integer>("DATA_TYPE", SQLDataType.INTEGER, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Integer> PRECISION = new TableFieldImpl<TypeInfoRecord, Integer>("PRECISION", SQLDataType.INTEGER, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, String> PREFIX = new TableFieldImpl<TypeInfoRecord, String>("PREFIX", SQLDataType.VARCHAR, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, String> SUFFIX = new TableFieldImpl<TypeInfoRecord, String>("SUFFIX", SQLDataType.VARCHAR, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, String> PARAMS = new TableFieldImpl<TypeInfoRecord, String>("PARAMS", SQLDataType.VARCHAR, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Boolean> AUTO_INCREMENT = new TableFieldImpl<TypeInfoRecord, Boolean>("AUTO_INCREMENT", SQLDataType.BOOLEAN, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Short> MINIMUM_SCALE = new TableFieldImpl<TypeInfoRecord, Short>("MINIMUM_SCALE", SQLDataType.SMALLINT, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Short> MAXIMUM_SCALE = new TableFieldImpl<TypeInfoRecord, Short>("MAXIMUM_SCALE", SQLDataType.SMALLINT, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Integer> RADIX = new TableFieldImpl<TypeInfoRecord, Integer>("RADIX", SQLDataType.INTEGER, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Integer> POS = new TableFieldImpl<TypeInfoRecord, Integer>("POS", SQLDataType.INTEGER, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Boolean> CASE_SENSITIVE = new TableFieldImpl<TypeInfoRecord, Boolean>("CASE_SENSITIVE", SQLDataType.BOOLEAN, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Short> NULLABLE = new TableFieldImpl<TypeInfoRecord, Short>("NULLABLE", SQLDataType.SMALLINT, TYPE_INFO);

	/**
	 * An uncommented item
	 */
	public static final TableField<TypeInfoRecord, Short> SEARCHABLE = new TableFieldImpl<TypeInfoRecord, Short>("SEARCHABLE", SQLDataType.SMALLINT, TYPE_INFO);

	/**
	 * No further instances allowed
	 */
	private TypeInfo() {
		super("TYPE_INFO", InformationSchema.INFORMATION_SCHEMA);
	}
}
