/**
 * This class is generated by jOOQ
 */
package org.jooq.util.h2.information_schema.tables.records;


import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;
import org.jooq.util.h2.information_schema.tables.Columns;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class ColumnsRecord extends TableRecordImpl<ColumnsRecord> {

	private static final long serialVersionUID = -282737028;

	/**
	 * An uncommented item
	 */
	public void setTableCatalog(String value) {
		setValue(Columns.TABLE_CATALOG, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTableCatalog() {
		return getValue(Columns.TABLE_CATALOG);
	}

	/**
	 * An uncommented item
	 */
	public void setTableSchema(String value) {
		setValue(Columns.TABLE_SCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTableSchema() {
		return getValue(Columns.TABLE_SCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setTableName(String value) {
		setValue(Columns.TABLE_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTableName() {
		return getValue(Columns.TABLE_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setColumnName(String value) {
		setValue(Columns.COLUMN_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getColumnName() {
		return getValue(Columns.COLUMN_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setOrdinalPosition(Integer value) {
		setValue(Columns.ORDINAL_POSITION, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getOrdinalPosition() {
		return getValue(Columns.ORDINAL_POSITION);
	}

	/**
	 * An uncommented item
	 */
	public void setColumnDefault(String value) {
		setValue(Columns.COLUMN_DEFAULT, value);
	}

	/**
	 * An uncommented item
	 */
	public String getColumnDefault() {
		return getValue(Columns.COLUMN_DEFAULT);
	}

	/**
	 * An uncommented item
	 */
	public void setIsNullable(String value) {
		setValue(Columns.IS_NULLABLE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getIsNullable() {
		return getValue(Columns.IS_NULLABLE);
	}

	/**
	 * An uncommented item
	 */
	public void setDataType(Integer value) {
		setValue(Columns.DATA_TYPE, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getDataType() {
		return getValue(Columns.DATA_TYPE);
	}

	/**
	 * An uncommented item
	 */
	public void setCharacterMaximumLength(Integer value) {
		setValue(Columns.CHARACTER_MAXIMUM_LENGTH, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getCharacterMaximumLength() {
		return getValue(Columns.CHARACTER_MAXIMUM_LENGTH);
	}

	/**
	 * An uncommented item
	 */
	public void setCharacterOctetLength(Integer value) {
		setValue(Columns.CHARACTER_OCTET_LENGTH, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getCharacterOctetLength() {
		return getValue(Columns.CHARACTER_OCTET_LENGTH);
	}

	/**
	 * An uncommented item
	 */
	public void setNumericPrecision(Integer value) {
		setValue(Columns.NUMERIC_PRECISION, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getNumericPrecision() {
		return getValue(Columns.NUMERIC_PRECISION);
	}

	/**
	 * An uncommented item
	 */
	public void setNumericPrecisionRadix(Integer value) {
		setValue(Columns.NUMERIC_PRECISION_RADIX, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getNumericPrecisionRadix() {
		return getValue(Columns.NUMERIC_PRECISION_RADIX);
	}

	/**
	 * An uncommented item
	 */
	public void setNumericScale(Integer value) {
		setValue(Columns.NUMERIC_SCALE, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getNumericScale() {
		return getValue(Columns.NUMERIC_SCALE);
	}

	/**
	 * An uncommented item
	 */
	public void setCharacterSetName(String value) {
		setValue(Columns.CHARACTER_SET_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCharacterSetName() {
		return getValue(Columns.CHARACTER_SET_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setCollationName(String value) {
		setValue(Columns.COLLATION_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCollationName() {
		return getValue(Columns.COLLATION_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setTypeName(String value) {
		setValue(Columns.TYPE_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTypeName() {
		return getValue(Columns.TYPE_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setNullable(Integer value) {
		setValue(Columns.NULLABLE, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getNullable() {
		return getValue(Columns.NULLABLE);
	}

	/**
	 * An uncommented item
	 */
	public void setIsComputed(Boolean value) {
		setValue(Columns.IS_COMPUTED, value);
	}

	/**
	 * An uncommented item
	 */
	public Boolean getIsComputed() {
		return getValue(Columns.IS_COMPUTED);
	}

	/**
	 * An uncommented item
	 */
	public void setSelectivity(Integer value) {
		setValue(Columns.SELECTIVITY, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getSelectivity() {
		return getValue(Columns.SELECTIVITY);
	}

	/**
	 * An uncommented item
	 */
	public void setCheckConstraint(String value) {
		setValue(Columns.CHECK_CONSTRAINT, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCheckConstraint() {
		return getValue(Columns.CHECK_CONSTRAINT);
	}

	/**
	 * An uncommented item
	 */
	public void setSequenceName(String value) {
		setValue(Columns.SEQUENCE_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSequenceName() {
		return getValue(Columns.SEQUENCE_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setRemarks(String value) {
		setValue(Columns.REMARKS, value);
	}

	/**
	 * An uncommented item
	 */
	public String getRemarks() {
		return getValue(Columns.REMARKS);
	}

	/**
	 * An uncommented item
	 */
	public void setSourceDataType(Short value) {
		setValue(Columns.SOURCE_DATA_TYPE, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getSourceDataType() {
		return getValue(Columns.SOURCE_DATA_TYPE);
	}
	/**
	 * Create a detached ColumnsRecord
	 */
	public ColumnsRecord() {
		super(Columns.COLUMNS);
	}
}
