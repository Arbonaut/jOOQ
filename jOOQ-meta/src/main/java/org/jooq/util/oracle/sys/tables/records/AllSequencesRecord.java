/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables.records;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.impl.TableRecordImpl;
import org.jooq.util.oracle.sys.tables.AllSequences;


/**
 * This class is generated by jOOQ.
 *
 * Description of SEQUENCEs accessible to the user
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class AllSequencesRecord extends TableRecordImpl<AllSequencesRecord> {

	private static final long serialVersionUID = 1713536264;

	/**
	 * Name of the owner of the sequence
	 */
	public void setSequenceOwner(String value) {
		setValue(AllSequences.SEQUENCE_OWNER, value);
	}

	/**
	 * Name of the owner of the sequence
	 */
	public String getSequenceOwner() {
		return getValue(AllSequences.SEQUENCE_OWNER);
	}

	/**
	 * SEQUENCE name
	 */
	public void setSequenceName(String value) {
		setValue(AllSequences.SEQUENCE_NAME, value);
	}

	/**
	 * SEQUENCE name
	 */
	public String getSequenceName() {
		return getValue(AllSequences.SEQUENCE_NAME);
	}

	/**
	 * Minimum value of the sequence
	 */
	public void setMinValue(BigDecimal value) {
		setValue(AllSequences.MIN_VALUE, value);
	}

	/**
	 * Minimum value of the sequence
	 */
	public BigDecimal getMinValue() {
		return getValue(AllSequences.MIN_VALUE);
	}

	/**
	 * Maximum value of the sequence
	 */
	public void setMaxValue(BigDecimal value) {
		setValue(AllSequences.MAX_VALUE, value);
	}

	/**
	 * Maximum value of the sequence
	 */
	public BigDecimal getMaxValue() {
		return getValue(AllSequences.MAX_VALUE);
	}

	/**
	 * Value by which sequence is incremented
	 */
	public void setIncrementBy(BigDecimal value) {
		setValue(AllSequences.INCREMENT_BY, value);
	}

	/**
	 * Value by which sequence is incremented
	 */
	public BigDecimal getIncrementBy() {
		return getValue(AllSequences.INCREMENT_BY);
	}

	/**
	 * Does sequence wrap around on reaching limit?
	 */
	public void setCycleFlag(String value) {
		setValue(AllSequences.CYCLE_FLAG, value);
	}

	/**
	 * Does sequence wrap around on reaching limit?
	 */
	public String getCycleFlag() {
		return getValue(AllSequences.CYCLE_FLAG);
	}

	/**
	 * Are sequence numbers generated in order?
	 */
	public void setOrderFlag(String value) {
		setValue(AllSequences.ORDER_FLAG, value);
	}

	/**
	 * Are sequence numbers generated in order?
	 */
	public String getOrderFlag() {
		return getValue(AllSequences.ORDER_FLAG);
	}

	/**
	 * Number of sequence numbers to cache
	 */
	public void setCacheSize(BigDecimal value) {
		setValue(AllSequences.CACHE_SIZE, value);
	}

	/**
	 * Number of sequence numbers to cache
	 */
	public BigDecimal getCacheSize() {
		return getValue(AllSequences.CACHE_SIZE);
	}

	/**
	 * Last sequence number written to disk
	 */
	public void setLastNumber(BigDecimal value) {
		setValue(AllSequences.LAST_NUMBER, value);
	}

	/**
	 * Last sequence number written to disk
	 */
	public BigDecimal getLastNumber() {
		return getValue(AllSequences.LAST_NUMBER);
	}
	/**
	 * Create a detached AllSequencesRecord
	 */
	public AllSequencesRecord() {
		super(AllSequences.ALL_SEQUENCES);
	}
}
