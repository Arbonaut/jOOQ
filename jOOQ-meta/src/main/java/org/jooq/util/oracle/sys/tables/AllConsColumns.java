/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;
import org.jooq.util.oracle.sys.tables.records.AllConsColumnsRecord;


/**
 * This class is generated by jOOQ.
 *
 * Information about accessible columns in constraint definitions
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class AllConsColumns extends TableImpl<AllConsColumnsRecord> {

	private static final long serialVersionUID = 1189847804;

	/**
	 * The singleton instance of ALL_CONS_COLUMNS
	 */
	public static final AllConsColumns ALL_CONS_COLUMNS = new AllConsColumns();

	/**
	 * The class holding records for this type
	 */
	private static final Class<AllConsColumnsRecord> __RECORD_TYPE = AllConsColumnsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AllConsColumnsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * Owner of the constraint definition
	 */
	public static final TableField<AllConsColumnsRecord, String> OWNER = new TableFieldImpl<AllConsColumnsRecord, String>("OWNER", SQLDataType.VARCHAR, ALL_CONS_COLUMNS);

	/**
	 * Name associated with the constraint definition
	 */
	public static final TableField<AllConsColumnsRecord, String> CONSTRAINT_NAME = new TableFieldImpl<AllConsColumnsRecord, String>("CONSTRAINT_NAME", SQLDataType.VARCHAR, ALL_CONS_COLUMNS);

	/**
	 * Name associated with table with constraint definition
	 */
	public static final TableField<AllConsColumnsRecord, String> TABLE_NAME = new TableFieldImpl<AllConsColumnsRecord, String>("TABLE_NAME", SQLDataType.VARCHAR, ALL_CONS_COLUMNS);

	/**
	 * Name associated with column or attribute of object column specified in the constraint definition
	 */
	public static final TableField<AllConsColumnsRecord, String> COLUMN_NAME = new TableFieldImpl<AllConsColumnsRecord, String>("COLUMN_NAME", SQLDataType.VARCHAR, ALL_CONS_COLUMNS);

	/**
	 * Original position of column or attribute in definition
	 */
	public static final TableField<AllConsColumnsRecord, BigDecimal> POSITION = new TableFieldImpl<AllConsColumnsRecord, BigDecimal>("POSITION", SQLDataType.NUMERIC, ALL_CONS_COLUMNS);

	/**
	 * No further instances allowed
	 */
	private AllConsColumns() {
		super("ALL_CONS_COLUMNS", Sys.SYS);
	}
}
