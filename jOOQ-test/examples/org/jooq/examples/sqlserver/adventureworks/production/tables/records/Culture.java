/**
 * This class is generated by jOOQ
 */
package org.jooq.examples.sqlserver.adventureworks.production.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "Culture", schema = "Production")
public class Culture extends org.jooq.impl.UpdatableRecordImpl<org.jooq.examples.sqlserver.adventureworks.production.tables.records.Culture> {

	private static final long serialVersionUID = 1463175751;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public void setCultureID(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture.CultureID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	@javax.persistence.Id
	@javax.persistence.Column(name = "CultureID", unique = true, nullable = false, length = 6)
	public java.lang.String getCultureID() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture.CultureID);
	}

	/**
	 * An uncommented item
	 */
	public void setName(java.lang.String value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture.Name, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "Name", nullable = false, length = 50)
	public java.lang.String getName() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture.Name);
	}

	/**
	 * An uncommented item
	 */
	public void setModifiedDate(java.sql.Timestamp value) {
		setValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture.ModifiedDate, value);
	}

	/**
	 * An uncommented item
	 */
	@javax.persistence.Column(name = "ModifiedDate", nullable = false)
	public java.sql.Timestamp getModifiedDate() {
		return getValue(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture.ModifiedDate);
	}

	/**
	 * Create a detached Culture
	 */
	public Culture() {
		super(org.jooq.examples.sqlserver.adventureworks.production.tables.Culture.Culture);
	}
}
