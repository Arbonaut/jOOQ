/**
 * This class is generated by jOOQ
 */
package org.jooq.test.db2.generatedclasses.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.UpdatableTableImpl;
import org.jooq.test.db2.generatedclasses.Lukas;
import org.jooq.test.db2.generatedclasses.tables.records.XUnusedRecord;
import org.jooq.util.db2.DB2DataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class XUnused extends UpdatableTableImpl<XUnusedRecord> {

	private static final long serialVersionUID = 1272855596;

	/**
	 * The singleton instance of X_UNUSED
	 */
	public static final XUnused X_UNUSED = new XUnused();

	/**
	 * The class holding records for this type
	 */
	private static final Class<XUnusedRecord> __RECORD_TYPE = XUnusedRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XUnusedRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final TableField<XUnusedRecord, Integer> ID = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "ID", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final TableField<XUnusedRecord, String> NAME = new TableFieldImpl<XUnusedRecord, String>(SQLDialect.DB2, "NAME", DB2DataType.VARCHAR, X_UNUSED);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [LUKAS.X_UNUSED.ID_REF, LUKAS.X_UNUSED.NAME_REF]
	 * REFERENCES X_UNUSED [LUKAS.X_UNUSED.ID, LUKAS.X_UNUSED.NAME]
	 * </pre></code>
	 */
	public static final TableField<XUnusedRecord, Integer> ID_REF = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "ID_REF", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> CLASS = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "CLASS", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> FIELDS = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "FIELDS", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> TABLE = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "TABLE", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> CONFIGURATION = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "CONFIGURATION", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> U_D_T = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "U_D_T", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> META_DATA = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "META_DATA", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> VALUES = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "VALUES", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> TYPE0 = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "TYPE0", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARY_KEY = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "PRIMARY_KEY", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARYKEY = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.DB2, "PRIMARYKEY", DB2DataType.INTEGER, X_UNUSED);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [LUKAS.X_UNUSED.ID_REF, LUKAS.X_UNUSED.NAME_REF]
	 * REFERENCES X_UNUSED [LUKAS.X_UNUSED.ID, LUKAS.X_UNUSED.NAME]
	 * </pre></code>
	 */
	public static final TableField<XUnusedRecord, String> NAME_REF = new TableFieldImpl<XUnusedRecord, String>(SQLDialect.DB2, "NAME_REF", DB2DataType.VARCHAR, X_UNUSED);

	/**
	 * No further instances allowed
	 */
	private XUnused() {
		super(SQLDialect.DB2, "X_UNUSED", Lukas.LUKAS);
	}

	/*
	 * static initialiser
	 */
	static {
		X_UNUSED.addToMainUniqueKey(ID);
		X_UNUSED.addToMainUniqueKey(NAME);
	}
}
