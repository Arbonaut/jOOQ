/**
 * This class is generated by jOOQ
 */
package org.jooq.test.db2.generatedclasses;


import java.sql.Connection;
import java.sql.SQLException;

import javax.annotation.Generated;

import org.jooq.test.db2.generatedclasses.procedures.PAuthorExists;
import org.jooq.test.db2.generatedclasses.procedures.PUnused;


/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored procedures in LUKAS
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public final class Procedures {

	/**
	 * Invoke P_UNUSED
	 *
	 * @param in1 IN parameter
	 * @param out1 OUT parameter
	 * @param out2 IN OUT parameter
	 */
	public static PUnused pUnused(Connection connection, String in1, Integer out2) throws SQLException {
		PUnused p = new PUnused();
		p.setIn1(in1);
		p.setOut2(out2);

		p.execute(connection);
		return p;
	}

	/**
	 * Invoke P_AUTHOR_EXISTS
	 *
	 * @param authorName IN parameter
	 * @param result OUT parameter
	 */
	public static Integer pAuthorExists(Connection connection, String authorName) throws SQLException {
		PAuthorExists p = new PAuthorExists();
		p.setAuthorName(authorName);

		p.execute(connection);
		return p.getResult();
	}

	/**
	 * No instances
	 */
	private Procedures() {}
}
