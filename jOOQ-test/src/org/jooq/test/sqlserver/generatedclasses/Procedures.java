/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sqlserver.generatedclasses;


import java.sql.Connection;
import java.sql.SQLException;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.test.sqlserver.generatedclasses.procedures.P391;
import org.jooq.test.sqlserver.generatedclasses.procedures.PAuthorExists;
import org.jooq.test.sqlserver.generatedclasses.procedures.PCreateAuthor;
import org.jooq.test.sqlserver.generatedclasses.procedures.PCreateAuthorByName;
import org.jooq.test.sqlserver.generatedclasses.procedures.PUnused;


/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored procedures in dbo
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public final class Procedures {

	/**
	 * Invoke P_AUTHOR_EXISTS
	 *
	 * @param authorName IN parameter
	 * @param result IN OUT parameter
	 */
	public static Integer pAuthorExists(Configuration configuration, String authorName, Integer result) throws SQLException {
		PAuthorExists p = new PAuthorExists();
		p.setAuthorName(authorName);
		p.setResult(result);

		p.execute(configuration);
		return p.getResult();
	}

	/**
	 * Invoke P_AUTHOR_EXISTS
	 *
	 * @param authorName IN parameter
	 * @param result IN OUT parameter
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static Integer pAuthorExists(Connection connection, String authorName, Integer result) throws SQLException {
		PAuthorExists p = new PAuthorExists();
		p.setAuthorName(authorName);
		p.setResult(result);

		p.execute(connection);
		return p.getResult();
	}

	/**
	 * Invoke P_CREATE_AUTHOR
	 *
	 */
	public static void pCreateAuthor(Configuration configuration) throws SQLException {
		PCreateAuthor p = new PCreateAuthor();

		p.execute(configuration);
	}

	/**
	 * Invoke P_CREATE_AUTHOR
	 *
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static void pCreateAuthor(Connection connection) throws SQLException {
		PCreateAuthor p = new PCreateAuthor();

		p.execute(connection);
	}

	/**
	 * Invoke P_CREATE_AUTHOR_BY_NAME
	 *
	 * @param firstName IN parameter
	 * @param lastName IN parameter
	 */
	public static void pCreateAuthorByName(Configuration configuration, String firstName, String lastName) throws SQLException {
		PCreateAuthorByName p = new PCreateAuthorByName();
		p.setFirstName(firstName);
		p.setLastName(lastName);

		p.execute(configuration);
	}

	/**
	 * Invoke P_CREATE_AUTHOR_BY_NAME
	 *
	 * @param firstName IN parameter
	 * @param lastName IN parameter
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static void pCreateAuthorByName(Connection connection, String firstName, String lastName) throws SQLException {
		PCreateAuthorByName p = new PCreateAuthorByName();
		p.setFirstName(firstName);
		p.setLastName(lastName);

		p.execute(connection);
	}

	/**
	 * Invoke P_UNUSED
	 *
	 * @param in1 IN parameter
	 * @param out1 IN OUT parameter
	 * @param out2 IN OUT parameter
	 */
	public static PUnused pUnused(Configuration configuration, String in1, Integer out1, Integer out2) throws SQLException {
		PUnused p = new PUnused();
		p.setIn1(in1);
		p.setOut1(out1);
		p.setOut2(out2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Invoke P_UNUSED
	 *
	 * @param in1 IN parameter
	 * @param out1 IN OUT parameter
	 * @param out2 IN OUT parameter
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static PUnused pUnused(Connection connection, String in1, Integer out1, Integer out2) throws SQLException {
		PUnused p = new PUnused();
		p.setIn1(in1);
		p.setOut1(out1);
		p.setOut2(out2);

		p.execute(connection);
		return p;
	}

	/**
	 * Invoke P391
	 *
	 * @param i1 IN parameter
	 * @param io1 IN OUT parameter
	 * @param o1 IN OUT parameter
	 * @param o2 IN OUT parameter
	 * @param io2 IN OUT parameter
	 * @param i2 IN parameter
	 */
	public static P391 p391(Configuration configuration, Integer i1, Integer io1, Integer o1, Integer o2, Integer io2, Integer i2) throws SQLException {
		P391 p = new P391();
		p.setI1(i1);
		p.setIo1(io1);
		p.setO1(o1);
		p.setO2(o2);
		p.setIo2(io2);
		p.setI2(i2);

		p.execute(configuration);
		return p;
	}

	/**
	 * Invoke P391
	 *
	 * @param i1 IN parameter
	 * @param io1 IN OUT parameter
	 * @param o1 IN OUT parameter
	 * @param o2 IN OUT parameter
	 * @param io2 IN OUT parameter
	 * @param i2 IN parameter
	 *
	 * @deprecated 1.6.1 [#453] This method of calling stored functions is not supported anymore<br/>
	 *             See {@link org.jooq.StoredObject#execute(java.sql.Connection)} for details.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public static P391 p391(Connection connection, Integer i1, Integer io1, Integer o1, Integer o2, Integer io2, Integer i2) throws SQLException {
		P391 p = new P391();
		p.setI1(i1);
		p.setIo1(io1);
		p.setO1(o1);
		p.setO2(o2);
		p.setIo2(io2);
		p.setI2(i2);

		p.execute(connection);
		return p;
	}

	/**
	 * No instances
	 */
	private Procedures() {}
}
