/**
 * This class is generated by jOOQ
 */
package org.jooq.test.ingres.generatedclasses.tables.records;


import java.sql.SQLException;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.test.ingres.generatedclasses.tables.TBook;
import org.jooq.test.ingres.generatedclasses.tables.TBookStore;
import org.jooq.test.ingres.generatedclasses.tables.TBookToBookStore;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class TBookToBookStoreRecord extends UpdatableRecordImpl<TBookToBookStoreRecord> {

	private static final long serialVersionUID = -1675476081;

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_store_name]
	 * REFERENCES t_book_store [test.t_book_store.name]
	 * </pre></code>
	 */
	public void setBookStoreName(String value) {
		setValue(TBookToBookStore.BOOK_STORE_NAME, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_store_name]
	 * REFERENCES t_book_store [test.t_book_store.name]
	 * </pre></code>
	 */
	public String getBookStoreName() {
		return getValue(TBookToBookStore.BOOK_STORE_NAME);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_store_name]
	 * REFERENCES t_book_store [test.t_book_store.name]
	 * </pre></code>
	 */
	public TBookStoreRecord fetchTBookStore() throws SQLException {
		return create()
			.selectFrom(TBookStore.T_BOOK_STORE)
			.where(TBookStore.NAME.equal(getValue(TBookToBookStore.BOOK_STORE_NAME)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_store_name]
	 * REFERENCES t_book_store [test.t_book_store.name]
	 * </pre></code>
	 *
	 * @deprecated Because of risk of ambiguity (#187), code generation for this<br/>
	 *             method will not be supported anymore, soon.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public TBookStoreRecord getTBookStore() throws SQLException {
		return create()
			.selectFrom(TBookStore.T_BOOK_STORE)
			.where(TBookStore.NAME.equal(getValue(TBookToBookStore.BOOK_STORE_NAME)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_id]
	 * REFERENCES t_book [test.t_book.id]
	 * </pre></code>
	 */
	public void setBookId(Integer value) {
		setValue(TBookToBookStore.BOOK_ID, value);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_id]
	 * REFERENCES t_book [test.t_book.id]
	 * </pre></code>
	 */
	public Integer getBookId() {
		return getValue(TBookToBookStore.BOOK_ID);
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_id]
	 * REFERENCES t_book [test.t_book.id]
	 * </pre></code>
	 */
	public TBookRecord fetchTBook() throws SQLException {
		return create()
			.selectFrom(TBook.T_BOOK)
			.where(TBook.ID.equal(getValue(TBookToBookStore.BOOK_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.t_book_to_book_store.book_id]
	 * REFERENCES t_book [test.t_book.id]
	 * </pre></code>
	 *
	 * @deprecated Because of risk of ambiguity (#187), code generation for this<br/>
	 *             method will not be supported anymore, soon.<br/><br/>
	 *             If you wish to remove this method, adapt your configuration:<br/>
	 *             <code>generator.generate.deprecated=false</code>
	 */
	@Deprecated
	public TBookRecord getTBook() throws SQLException {
		return create()
			.selectFrom(TBook.T_BOOK)
			.where(TBook.ID.equal(getValue(TBookToBookStore.BOOK_ID)))
			.fetchOne();
	}

	/**
	 * An uncommented item
	 */
	public void setStock(Integer value) {
		setValue(TBookToBookStore.STOCK, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getStock() {
		return getValue(TBookToBookStore.STOCK);
	}
	/**
	 * Create a detached TBookToBookStoreRecord
	 */
	public TBookToBookStoreRecord() {
		super(TBookToBookStore.T_BOOK_TO_BOOK_STORE);
	}

	/**
	 * Create an attached TBookToBookStoreRecord
	 */
	public TBookToBookStoreRecord(Configuration configuration) {
		super(TBookToBookStore.T_BOOK_TO_BOOK_STORE, configuration);
	}
}
