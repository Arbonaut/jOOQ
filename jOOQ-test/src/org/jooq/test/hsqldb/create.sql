DROP VIEW IF EXISTS v_library;
/
DROP TABLE IF EXISTS t_book;
/
DROP TABLE IF EXISTS t_author;
/
DROP TABLE IF EXISTS x_unused;
/
DROP PROCEDURE IF EXISTS p_author_exists;
/
DROP FUNCTION IF EXISTS f_author_exists;
/

CREATE TABLE t_author (
	ID INT NOT NULL PRIMARY KEY,
	FIRST_NAME VARCHAR(50) NOT NULL,
	LAST_NAME VARCHAR(50) NOT NULL,
	DATE_OF_BIRTH DATE NOT NULL
);
/

CREATE TABLE t_book (
	ID INT NOT NULL PRIMARY KEY,
	AUTHOR_ID INT NOT NULL,
	TITLE VARCHAR(400) NOT NULL,
	FOREIGN KEY (AUTHOR_ID) REFERENCES T_AUTHOR(ID)
);
/

CREATE TABLE x_unused (
	ID INT NOT NULL,
	NAME VARCHAR(10) NOT NULL,
	ID_REF INT,
	NAME_REF VARCHAR(10),
	PRIMARY KEY(ID, NAME),
	FOREIGN KEY(ID_REF, NAME_REF) REFERENCES X_UNUSED(ID, NAME)
);
/

CREATE VIEW V_LIBRARY (AUTHOR, TITLE) AS
SELECT T_AUTHOR.FIRST_NAME + ' ' + T_AUTHOR.LAST_NAME, T_BOOK.TITLE
FROM T_AUTHOR JOIN T_BOOK ON T_BOOK.AUTHOR_ID = T_AUTHOR.ID;
/
  
INSERT INTO t_author VALUES (1, 'George', 'Orwell', '1903-06-25');
/
INSERT INTO t_author VALUES (2, 'Paulo', 'Coelho', '1947-08-24');
/

INSERT INTO t_book VALUES (1, 1, '1984');
/
INSERT INTO t_book VALUES (2, 1, 'Animal Farm');
/
INSERT INTO t_book VALUES (3, 2, 'O Alquimista');
/
INSERT INTO t_book VALUES (4, 2, 'Brida');
/
