/**
 * This class is generated by jOOQ
 */
package org.jooq.test.hsqldb.generatedclasses.procedures;


import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.SQLDialect;
import org.jooq.impl.ParameterImpl;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.StoredProcedureImpl;
import org.jooq.test.hsqldb.generatedclasses.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class P391 extends StoredProcedureImpl {

	private static final long serialVersionUID = 1234506832;


	/**
	 * An uncommented item
	 */
	public static final Parameter<Integer> I1 = new ParameterImpl<Integer>("I1", SQLDataType.INTEGER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<Integer> IO1 = new ParameterImpl<Integer>("IO1", SQLDataType.INTEGER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<Integer> O1 = new ParameterImpl<Integer>("O1", SQLDataType.INTEGER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<Integer> O2 = new ParameterImpl<Integer>("O2", SQLDataType.INTEGER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<Integer> IO2 = new ParameterImpl<Integer>("IO2", SQLDataType.INTEGER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<Integer> I2 = new ParameterImpl<Integer>("I2", SQLDataType.INTEGER);

	/**
	 * Create a new procedure call instance
	 */
	public P391() {
		super(SQLDialect.HSQLDB, "P391", Public.PUBLIC);

		addInParameter(I1);
		addInOutParameter(IO1);
		addOutParameter(O1);
		addOutParameter(O2);
		addInOutParameter(IO2);
		addInParameter(I2);
	}

	public void setI1(Integer value) {
		setValue(I1, value);
	}

	public void setIo1(Integer value) {
		setValue(IO1, value);
	}

	public void setIo2(Integer value) {
		setValue(IO2, value);
	}

	public void setI2(Integer value) {
		setValue(I2, value);
	}

	public Integer getIo1() {
		return getValue(IO1);
	}

	public Integer getO1() {
		return getValue(O1);
	}

	public Integer getO2() {
		return getValue(O2);
	}

	public Integer getIo2() {
		return getValue(IO2);
	}
}
