/**
 * This class is generated by jOOQ
 */
package org.jooq.test.sybase.generatedclasses;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.test.sybase.generatedclasses.tables.TAuthor;
import org.jooq.test.sybase.generatedclasses.tables.TBook;
import org.jooq.test.sybase.generatedclasses.tables.TBookStore;
import org.jooq.test.sybase.generatedclasses.tables.TBookToBookStore;
import org.jooq.test.sybase.generatedclasses.tables.XTestCase_64_69;
import org.jooq.test.sybase.generatedclasses.tables.XTestCase_71;
import org.jooq.test.sybase.generatedclasses.tables.XTestCase_85;
import org.jooq.test.sybase.generatedclasses.tables.XUnused;
import org.jooq.test.sybase.generatedclasses.tables.records.TAuthorRecord;
import org.jooq.test.sybase.generatedclasses.tables.records.TBookRecord;
import org.jooq.test.sybase.generatedclasses.tables.records.TBookStoreRecord;
import org.jooq.test.sybase.generatedclasses.tables.records.TBookToBookStoreRecord;
import org.jooq.test.sybase.generatedclasses.tables.records.XTestCase_64_69Record;
import org.jooq.test.sybase.generatedclasses.tables.records.XTestCase_71Record;
import org.jooq.test.sybase.generatedclasses.tables.records.XTestCase_85Record;
import org.jooq.test.sybase.generatedclasses.tables.records.XUnusedRecord;


/**
 * This class is generated by jOOQ.
 *
 * A class modelling foreign key relationships between tables of the dba schema
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
@SuppressWarnings({"unchecked"})
public class Keys extends AbstractKeys {

	// IDENTITY definitions
	public static final Identity<TBookStoreRecord, Integer> IDENTITY_t_book_store = createIdentity(TBookStore.T_BOOK_STORE, TBookStore.ID);

	// UNIQUE and PRIMARY KEY definitions
	public static final UniqueKey<TAuthorRecord> t_author_pk_t_author = createUniqueKey(TAuthor.T_AUTHOR, TAuthor.ID);
	public static final UniqueKey<TBookRecord> t_book_pk_t_book = createUniqueKey(TBook.T_BOOK, TBook.ID);
	public static final UniqueKey<TBookStoreRecord> t_book_store_uk_t_book_store_name = createUniqueKey(TBookStore.T_BOOK_STORE, TBookStore.NAME);
	public static final UniqueKey<TBookToBookStoreRecord> t_book_to_book_store_pk_b2bs = createUniqueKey(TBookToBookStore.T_BOOK_TO_BOOK_STORE, TBookToBookStore.BOOK_STORE_NAME, TBookToBookStore.BOOK_ID);
	public static final UniqueKey<XUnusedRecord> x_unused_pk_x_unused = createUniqueKey(XUnused.X_UNUSED, XUnused.ID, XUnused.NAME);
	public static final UniqueKey<XUnusedRecord> x_unused_uk_x_unused_id = createUniqueKey(XUnused.X_UNUSED, XUnused.ID);
	public static final UniqueKey<XTestCase_64_69Record> x_test_case_64_69_pk_x_test_case_64_69 = createUniqueKey(XTestCase_64_69.X_TEST_CASE_64_69, XTestCase_64_69.ID);
	public static final UniqueKey<XTestCase_71Record> x_test_case_71_pk_x_test_case_71 = createUniqueKey(XTestCase_71.X_TEST_CASE_71, XTestCase_71.ID);
	public static final UniqueKey<XTestCase_85Record> x_test_case_85_pk_x_test_case_85 = createUniqueKey(XTestCase_85.X_TEST_CASE_85, XTestCase_85.ID);

	// FOREIGN KEY definitions
	public static final ForeignKey<TBookRecord, TAuthorRecord> t_book_fk_t_book_author_id = createForeignKey(t_author_pk_t_author, TBook.T_BOOK, TBook.AUTHOR_ID);
	public static final ForeignKey<TBookRecord, TAuthorRecord> t_book_fk_t_book_co_author_id = createForeignKey(t_author_pk_t_author, TBook.T_BOOK, TBook.CO_AUTHOR_ID);
	public static final ForeignKey<TBookToBookStoreRecord, TBookStoreRecord> t_book_to_book_store_fk_b2bs_bs_name = createForeignKey(t_book_store_uk_t_book_store_name, TBookToBookStore.T_BOOK_TO_BOOK_STORE, TBookToBookStore.BOOK_STORE_NAME);
	public static final ForeignKey<TBookToBookStoreRecord, TBookRecord> t_book_to_book_store_fk_b2bs_b_id = createForeignKey(t_book_pk_t_book, TBookToBookStore.T_BOOK_TO_BOOK_STORE, TBookToBookStore.BOOK_ID);
	public static final ForeignKey<XUnusedRecord, XUnusedRecord> x_unused_fk_x_unused_self = createForeignKey(x_unused_pk_x_unused, XUnused.X_UNUSED, XUnused.ID_REF, XUnused.NAME_REF);
	public static final ForeignKey<XTestCase_64_69Record, XUnusedRecord> x_test_case_64_69_fk_x_test_case_64_69 = createForeignKey(x_unused_uk_x_unused_id, XTestCase_64_69.X_TEST_CASE_64_69, XTestCase_64_69.UNUSED_ID);
	public static final ForeignKey<XTestCase_71Record, XTestCase_64_69Record> x_test_case_71_fk_x_test_case_71 = createForeignKey(x_test_case_64_69_pk_x_test_case_64_69, XTestCase_71.X_TEST_CASE_71, XTestCase_71.TEST_CASE_64_69_ID);
	public static final ForeignKey<XTestCase_85Record, XUnusedRecord> x_test_case_85_fk_x_test_case_85 = createForeignKey(x_unused_pk_x_unused, XTestCase_85.X_TEST_CASE_85, XTestCase_85.X_UNUSED_ID, XTestCase_85.X_UNUSED_NAME);

	/**
	 * No instances
	 */
	private Keys() {}
}
