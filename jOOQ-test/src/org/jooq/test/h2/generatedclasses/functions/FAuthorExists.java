/**
 * This class is generated by jOOQ
 */
package org.jooq.test.h2.generatedclasses.functions;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Parameter;
import org.jooq.SQLDialect;
import org.jooq.Select;
import org.jooq.impl.ParameterImpl;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.StoredFunctionImpl;
import org.jooq.test.h2.generatedclasses.Public;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class FAuthorExists extends StoredFunctionImpl<Integer> {

	private static final long serialVersionUID = -1360922599;


	/**
	 * An uncommented item
	 */
	public static final Parameter<String> P2 = new ParameterImpl<String>("P2", SQLDataType.VARCHAR);

	/**
	 * Create a new function call instance
	 */
	public FAuthorExists() {
		super(SQLDialect.H2, "F_AUTHOR_EXISTS", Public.PUBLIC, SQLDataType.INTEGER);

		addInParameter(P2);
	}

	/**
	 * Set the <code>P2</code> parameter to the function
	 */
	public void setP2(String value) {
		setValue(P2, value);
	}

	/**
	 * Set the <code>P2</code> parameter to the function
	 * <p>
	 * Use this method only, if the function is called as a {@link Field} in a {@link Select} statement!
	 */
	public void setP2(Field<String> field) {
		setField(P2, field);
	}
}
