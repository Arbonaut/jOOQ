/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.packages;


import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.SQLException;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.test.oracle.generatedclasses.packages.library.PkgFAuthorExists1;
import org.jooq.test.oracle.generatedclasses.packages.library.PkgFAuthorExists2;
import org.jooq.test.oracle.generatedclasses.packages.library.PkgFUnused;
import org.jooq.test.oracle.generatedclasses.packages.library.PkgPAuthorExists1;
import org.jooq.test.oracle.generatedclasses.packages.library.PkgPAuthorExists2;


/**
 * This class is generated by jOOQ.
 *
 * Convenience access to all stored procedures and functions in LIBRARY
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public final class Library {

	/**
	 * Invoke PKG_P_AUTHOR_EXISTS
	 *
	 * @param authorName IN parameter
	 * @param result OUT parameter
	 */
	public static BigDecimal pkgPAuthorExists1(Connection connection, String authorName) throws SQLException {
		PkgPAuthorExists1 p = new PkgPAuthorExists1();
		p.setAuthorName(authorName);

		p.execute(connection);
		return p.getResult();
	}

	/**
	 * Invoke PKG_P_AUTHOR_EXISTS
	 *
	 * @param authorName IN parameter
	 * @param result OUT parameter
	 * @param unused IN OUT parameter
	 */
	public static PkgPAuthorExists2 pkgPAuthorExists2(Connection connection, String authorName, Number unused) throws SQLException {
		PkgPAuthorExists2 p = new PkgPAuthorExists2();
		p.setAuthorName(authorName);
		p.setUnused(unused);

		p.execute(connection);
		return p;
	}

	/**
	 * Invoke PKG_F_AUTHOR_EXISTS
	 *
	 * @param authorName
	 * @param unused
	 */
	public static BigDecimal pkgFAuthorExists2(Connection connection, String authorName, Number unused) throws SQLException {
		PkgFAuthorExists2 f = new PkgFAuthorExists2();
		f.setAuthorName(authorName);
		f.setUnused(unused);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get PKG_F_AUTHOR_EXISTS as a field
	 *
	 * @param authorName
	 * @param unused
	 */
	public static Field<BigDecimal> pkgFAuthorExists2(String authorName, Number unused) {
		PkgFAuthorExists2 f = new PkgFAuthorExists2();
		f.setAuthorName(authorName);
		f.setUnused(unused);

		return f.asField();
	}

	/**
	 * Get PKG_F_AUTHOR_EXISTS as a field
	 *
	 * @param authorName
	 * @param unused
	 */
	public static Field<BigDecimal> pkgFAuthorExists2(Field<String> authorName, Field<? extends Number> unused) {
		PkgFAuthorExists2 f = new PkgFAuthorExists2();
		f.setAuthorName(authorName);
		f.setUnused(unused);

		return f.asField();
	}

	/**
	 * Invoke PKG_F_AUTHOR_EXISTS
	 *
	 * @param authorName
	 */
	public static BigDecimal pkgFAuthorExists1(Connection connection, String authorName) throws SQLException {
		PkgFAuthorExists1 f = new PkgFAuthorExists1();
		f.setAuthorName(authorName);

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get PKG_F_AUTHOR_EXISTS as a field
	 *
	 * @param authorName
	 */
	public static Field<BigDecimal> pkgFAuthorExists1(String authorName) {
		PkgFAuthorExists1 f = new PkgFAuthorExists1();
		f.setAuthorName(authorName);

		return f.asField();
	}

	/**
	 * Get PKG_F_AUTHOR_EXISTS as a field
	 *
	 * @param authorName
	 */
	public static Field<BigDecimal> pkgFAuthorExists1(Field<String> authorName) {
		PkgFAuthorExists1 f = new PkgFAuthorExists1();
		f.setAuthorName(authorName);

		return f.asField();
	}

	/**
	 * Invoke PKG_F_UNUSED
	 *
	 */
	public static BigDecimal pkgFUnused(Connection connection) throws SQLException {
		PkgFUnused f = new PkgFUnused();

		f.execute(connection);
		return f.getReturnValue();
	}

	/**
	 * Get PKG_F_UNUSED as a field
	 *
	 */
	public static Field<BigDecimal> pkgFUnused() {
		PkgFUnused f = new PkgFUnused();

		return f.asField();
	}

	/**
	 * No instances
	 */
	private Library() {}
}
