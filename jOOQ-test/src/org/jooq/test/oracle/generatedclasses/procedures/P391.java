/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.procedures;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Parameter;
import org.jooq.SQLDialect;
import org.jooq.impl.ParameterImpl;
import org.jooq.impl.StoredProcedureImpl;
import org.jooq.test.oracle.generatedclasses.Test;
import org.jooq.util.oracle.OracleDataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class P391 extends StoredProcedureImpl {

	private static final long serialVersionUID = 339200136;


	/**
	 * An uncommented item
	 */
	public static final Parameter<BigDecimal> I1 = new ParameterImpl<BigDecimal>(SQLDialect.ORACLE, "I1", OracleDataType.NUMBER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<BigDecimal> IO1 = new ParameterImpl<BigDecimal>(SQLDialect.ORACLE, "IO1", OracleDataType.NUMBER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<BigDecimal> O1 = new ParameterImpl<BigDecimal>(SQLDialect.ORACLE, "O1", OracleDataType.NUMBER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<BigDecimal> O2 = new ParameterImpl<BigDecimal>(SQLDialect.ORACLE, "O2", OracleDataType.NUMBER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<BigDecimal> IO2 = new ParameterImpl<BigDecimal>(SQLDialect.ORACLE, "IO2", OracleDataType.NUMBER);

	/**
	 * An uncommented item
	 */
	public static final Parameter<BigDecimal> I2 = new ParameterImpl<BigDecimal>(SQLDialect.ORACLE, "I2", OracleDataType.NUMBER);

	/**
	 * No further instances allowed
	 */
	public P391() {
		super(SQLDialect.ORACLE, "P391", Test.TEST);

		addInParameter(I1);
		addInOutParameter(IO1);
		addOutParameter(O1);
		addOutParameter(O2);
		addInOutParameter(IO2);
		addInParameter(I2);
	}

	public void setI1(Number value) {
		setNumber(I1, value);
	}

	public void setIo1(Number value) {
		setNumber(IO1, value);
	}

	public void setIo2(Number value) {
		setNumber(IO2, value);
	}

	public void setI2(Number value) {
		setNumber(I2, value);
	}

	public BigDecimal getIo1() {
		return getValue(IO1);
	}

	public BigDecimal getO1() {
		return getValue(O1);
	}

	public BigDecimal getO2() {
		return getValue(O2);
	}

	public BigDecimal getIo2() {
		return getValue(IO2);
	}
}
