/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.test.oracle.generatedclasses.Test;
import org.jooq.test.oracle.generatedclasses.tables.records.VIncompleteRecord;
import org.jooq.util.oracle.OracleDataType;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class VIncomplete extends TableImpl<VIncompleteRecord> {

	private static final long serialVersionUID = 1968793138;

	/**
	 * The singleton instance of V_INCOMPLETE
	 */
	public static final VIncomplete V_INCOMPLETE = new VIncomplete();

	/**
	 * The class holding records for this type
	 */
	private static final Class<VIncompleteRecord> __RECORD_TYPE = VIncompleteRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VIncompleteRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> ID = new TableFieldImpl<VIncompleteRecord, Object>("ID", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> AUTHOR_ID = new TableFieldImpl<VIncompleteRecord, Object>("AUTHOR_ID", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> CO_AUTHOR_ID = new TableFieldImpl<VIncompleteRecord, Object>("CO_AUTHOR_ID", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> DETAILS_ID = new TableFieldImpl<VIncompleteRecord, Object>("DETAILS_ID", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> TITLE = new TableFieldImpl<VIncompleteRecord, Object>("TITLE", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> PUBLISHED_IN = new TableFieldImpl<VIncompleteRecord, Object>("PUBLISHED_IN", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> LANGUAGE_ID = new TableFieldImpl<VIncompleteRecord, Object>("LANGUAGE_ID", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> CONTENT_TEXT = new TableFieldImpl<VIncompleteRecord, Object>("CONTENT_TEXT", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * An uncommented item
	 * 
	 * The SQL type of this item (UNDEFINED) could not be mapped.<br/>
	 * Deserialising this field might not work!
	 */
	public static final TableField<VIncompleteRecord, Object> CONTENT_PDF = new TableFieldImpl<VIncompleteRecord, Object>("CONTENT_PDF", OracleDataType.getDefaultDataType("UNDEFINED"), V_INCOMPLETE);

	/**
	 * No further instances allowed
	 */
	private VIncomplete() {
		super("V_INCOMPLETE", Test.TEST);
	}
}
