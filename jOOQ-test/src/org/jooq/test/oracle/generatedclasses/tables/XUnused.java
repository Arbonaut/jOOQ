/**
 * This class is generated by jOOQ
 */
package org.jooq.test.oracle.generatedclasses.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.UpdatableTableImpl;
import org.jooq.test.oracle.generatedclasses.Test;
import org.jooq.test.oracle.generatedclasses.tables.records.XUnusedRecord;
import org.jooq.util.oracle.OracleDataType;


/**
 * This class is generated by jOOQ.
 *
 * An unused table in the same schema.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class XUnused extends UpdatableTableImpl<XUnusedRecord> {

	private static final long serialVersionUID = -1458439228;

	/**
	 * The singleton instance of X_UNUSED
	 */
	public static final XUnused X_UNUSED = new XUnused();

	/**
	 * The class holding records for this type
	 */
	private static final Class<XUnusedRecord> __RECORD_TYPE = XUnusedRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XUnusedRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final TableField<XUnusedRecord, Integer> ID = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "ID", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final TableField<XUnusedRecord, String> NAME = new TableFieldImpl<XUnusedRecord, String>(SQLDialect.ORACLE, "NAME", OracleDataType.VARCHAR2, X_UNUSED);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TEST.X_UNUSED.ID_REF, TEST.X_UNUSED.NAME_REF]
	 * REFERENCES X_UNUSED [TEST.X_UNUSED.ID, TEST.X_UNUSED.NAME]
	 * </pre></code>
	 */
	public static final TableField<XUnusedRecord, Integer> ID_REF = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "ID_REF", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> CLASS = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "CLASS", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> FIELDS = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "FIELDS", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> CONFIGURATION = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "CONFIGURATION", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> U_D_T = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "U_D_T", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> META_DATA = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "META_DATA", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> TYPE0 = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "TYPE0", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARY_KEY = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "PRIMARY_KEY", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARYKEY = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.ORACLE, "PRIMARYKEY", OracleDataType.NUMBER.asNumberDataType(Integer.class), X_UNUSED);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [TEST.X_UNUSED.ID_REF, TEST.X_UNUSED.NAME_REF]
	 * REFERENCES X_UNUSED [TEST.X_UNUSED.ID, TEST.X_UNUSED.NAME]
	 * </pre></code>
	 */
	public static final TableField<XUnusedRecord, String> NAME_REF = new TableFieldImpl<XUnusedRecord, String>(SQLDialect.ORACLE, "NAME_REF", OracleDataType.VARCHAR2, X_UNUSED);

	/**
	 * No further instances allowed
	 */
	private XUnused() {
		super(SQLDialect.ORACLE, "X_UNUSED", Test.TEST);
	}

	/*
	 * static initialiser
	 */
	static {
		X_UNUSED.addToMainUniqueKey(ID);
		X_UNUSED.addToMainUniqueKey(NAME);
	}
}
