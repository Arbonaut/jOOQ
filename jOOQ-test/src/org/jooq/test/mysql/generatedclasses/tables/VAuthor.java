/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.test.mysql.generatedclasses.Test;
import org.jooq.test.mysql.generatedclasses.tables.records.VAuthorRecord;


/**
 * This class is generated by jOOQ.
 *
 * VIEW
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class VAuthor extends TableImpl<VAuthorRecord> {

	private static final long serialVersionUID = 130618733;

	/**
	 * The singleton instance of v_author
	 */
	public static final VAuthor V_AUTHOR = new VAuthor();

	/**
	 * The class holding records for this type
	 */
	private static final Class<VAuthorRecord> __RECORD_TYPE = VAuthorRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VAuthorRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * The author ID
	 */
	public static final TableField<VAuthorRecord, Integer> ID = new TableFieldImpl<VAuthorRecord, Integer>("ID", SQLDataType.INTEGER, V_AUTHOR);

	/**
	 * The author's first name
	 */
	public static final TableField<VAuthorRecord, String> FIRST_NAME = new TableFieldImpl<VAuthorRecord, String>("FIRST_NAME", SQLDataType.VARCHAR, V_AUTHOR);

	/**
	 * The author's last name
	 */
	public static final TableField<VAuthorRecord, String> LAST_NAME = new TableFieldImpl<VAuthorRecord, String>("LAST_NAME", SQLDataType.VARCHAR, V_AUTHOR);

	/**
	 * The author's date of birth
	 */
	public static final TableField<VAuthorRecord, Date> DATE_OF_BIRTH = new TableFieldImpl<VAuthorRecord, Date>("DATE_OF_BIRTH", SQLDataType.DATE, V_AUTHOR);

	/**
	 * The author's year of birth
	 */
	public static final TableField<VAuthorRecord, Integer> YEAR_OF_BIRTH = new TableFieldImpl<VAuthorRecord, Integer>("YEAR_OF_BIRTH", SQLDataType.INTEGER, V_AUTHOR);

	/**
	 * The author's address
	 */
	public static final TableField<VAuthorRecord, String> ADDRESS = new TableFieldImpl<VAuthorRecord, String>("ADDRESS", SQLDataType.VARCHAR, V_AUTHOR);

	/**
	 * No further instances allowed
	 */
	private VAuthor() {
		super("v_author", Test.TEST);
	}
}
