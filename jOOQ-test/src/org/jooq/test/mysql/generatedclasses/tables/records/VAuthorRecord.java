/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables.records;


import java.sql.Date;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.TableRecordImpl;
import org.jooq.test.mysql.generatedclasses.tables.VAuthor;


/**
 * This class is generated by jOOQ.
 *
 * VIEW
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class VAuthorRecord extends TableRecordImpl<VAuthorRecord> {

	private static final long serialVersionUID = -1285757342;

	/**
	 * The author ID
	 */
	public void setId(Integer value) {
		setValue(VAuthor.ID, value);
	}

	/**
	 * The author ID
	 */
	public Integer getId() {
		return getValue(VAuthor.ID);
	}

	/**
	 * The author's first name
	 */
	public void setFirstName(String value) {
		setValue(VAuthor.FIRST_NAME, value);
	}

	/**
	 * The author's first name
	 */
	public String getFirstName() {
		return getValue(VAuthor.FIRST_NAME);
	}

	/**
	 * The author's last name
	 */
	public void setLastName(String value) {
		setValue(VAuthor.LAST_NAME, value);
	}

	/**
	 * The author's last name
	 */
	public String getLastName() {
		return getValue(VAuthor.LAST_NAME);
	}

	/**
	 * The author's date of birth
	 */
	public void setDateOfBirth(Date value) {
		setValue(VAuthor.DATE_OF_BIRTH, value);
	}

	/**
	 * The author's date of birth
	 */
	public Date getDateOfBirth() {
		return getValue(VAuthor.DATE_OF_BIRTH);
	}

	/**
	 * The author's year of birth
	 */
	public void setYearOfBirth(Integer value) {
		setValue(VAuthor.YEAR_OF_BIRTH, value);
	}

	/**
	 * The author's year of birth
	 */
	public Integer getYearOfBirth() {
		return getValue(VAuthor.YEAR_OF_BIRTH);
	}

	/**
	 * The author's address
	 */
	public void setAddress(String value) {
		setValue(VAuthor.ADDRESS, value);
	}

	/**
	 * The author's address
	 */
	public String getAddress() {
		return getValue(VAuthor.ADDRESS);
	}
	/**
	 * Create a detached VAuthorRecord
	 */
	public VAuthorRecord() {
		super(VAuthor.V_AUTHOR);
	}

	/**
	 * Create an attached VAuthorRecord
	 * @deprecated - (#363) use the other constructor instead
	 */
	@Deprecated
	public VAuthorRecord(Configuration configuration) {
		super(VAuthor.V_AUTHOR, configuration);
	}
}
