/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables;


import javax.annotation.Generated;

import org.jooq.TableField;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.test.mysql.generatedclasses.Test;
import org.jooq.test.mysql.generatedclasses.enums.VBookStatus;
import org.jooq.test.mysql.generatedclasses.tables.records.VBookRecord;
import org.jooq.util.mysql.MySQLDataType;


/**
 * This class is generated by jOOQ.
 *
 * VIEW
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class VBook extends TableImpl<VBookRecord> {

	private static final long serialVersionUID = 614180881;

	/**
	 * The singleton instance of v_book
	 */
	public static final VBook V_BOOK = new VBook();

	/**
	 * The class holding records for this type
	 */
	private static final Class<VBookRecord> __RECORD_TYPE = VBookRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VBookRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * The book ID
	 */
	public static final TableField<VBookRecord, Integer> ID = new TableFieldImpl<VBookRecord, Integer>("ID", SQLDataType.INTEGER, V_BOOK);

	/**
	 * The author ID in entity 'author'
	 */
	public static final TableField<VBookRecord, Integer> AUTHOR_ID = new TableFieldImpl<VBookRecord, Integer>("AUTHOR_ID", SQLDataType.INTEGER, V_BOOK);

	/**
	 * An uncommented item
	 */
	public static final TableField<VBookRecord, Integer> CO_AUTHOR_ID = new TableFieldImpl<VBookRecord, Integer>("co_author_id", SQLDataType.INTEGER, V_BOOK);

	/**
	 * Some more details about the book
	 */
	public static final TableField<VBookRecord, Integer> DETAILS_ID = new TableFieldImpl<VBookRecord, Integer>("DETAILS_ID", SQLDataType.INTEGER, V_BOOK);

	/**
	 * The book's title
	 */
	public static final TableField<VBookRecord, String> TITLE = new TableFieldImpl<VBookRecord, String>("TITLE", SQLDataType.CLOB, V_BOOK);

	/**
	 * The year the book was published in
	 */
	public static final TableField<VBookRecord, Integer> PUBLISHED_IN = new TableFieldImpl<VBookRecord, Integer>("PUBLISHED_IN", SQLDataType.INTEGER, V_BOOK);

	/**
	 * The language of the book
	 */
	public static final TableField<VBookRecord, Integer> LANGUAGE_ID = new TableFieldImpl<VBookRecord, Integer>("LANGUAGE_ID", SQLDataType.INTEGER, V_BOOK);

	/**
	 * Some textual content of the book
	 */
	public static final TableField<VBookRecord, String> CONTENT_TEXT = new TableFieldImpl<VBookRecord, String>("CONTENT_TEXT", SQLDataType.CLOB, V_BOOK);

	/**
	 * Some binary content of the book
	 */
	public static final TableField<VBookRecord, byte[]> CONTENT_PDF = new TableFieldImpl<VBookRecord, byte[]>("CONTENT_PDF", SQLDataType.BLOB, V_BOOK);

	/**
	 * The book's stock status
	 */
	public static final TableField<VBookRecord, VBookStatus> STATUS = new TableFieldImpl<VBookRecord, VBookStatus>("STATUS", MySQLDataType.VARCHAR.asEnumDataType(VBookStatus.class), V_BOOK);

	/**
	 * No further instances allowed
	 */
	private VBook() {
		super("v_book", Test.TEST);
	}
}
