/**
 * This class is generated by jOOQ
 */
package org.jooq.test.mysql.generatedclasses.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.UpdatableTableImpl;
import org.jooq.test.mysql.generatedclasses.Test;
import org.jooq.test.mysql.generatedclasses.tables.records.XUnusedRecord;
import org.jooq.util.mysql.MySQLDataType;


/**
 * This class is generated by jOOQ.
 *
 * An unused table in the same schema.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class XUnused extends UpdatableTableImpl<XUnusedRecord> {

	private static final long serialVersionUID = 719067182;

	/**
	 * The singleton instance of x_unused
	 */
	public static final XUnused X_UNUSED = new XUnused();

	/**
	 * The class holding records for this type
	 */
	private static final Class<XUnusedRecord> __RECORD_TYPE = XUnusedRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<XUnusedRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final TableField<XUnusedRecord, Integer> ID = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "ID", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 * 
	 * PRIMARY KEY
	 */
	public static final TableField<XUnusedRecord, String> NAME = new TableFieldImpl<XUnusedRecord, String>(SQLDialect.MYSQL, "NAME", MySQLDataType.VARCHAR, X_UNUSED);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.x_unused.ID_REF, test.x_unused.NAME_REF]
	 * REFERENCES x_unused [test.x_unused.ID, test.x_unused.NAME]
	 * </pre></code>
	 */
	public static final TableField<XUnusedRecord, Integer> ID_REF = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "ID_REF", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 * <p>
	 * <code><pre>
	 * FOREIGN KEY [test.x_unused.ID_REF, test.x_unused.NAME_REF]
	 * REFERENCES x_unused [test.x_unused.ID, test.x_unused.NAME]
	 * </pre></code>
	 */
	public static final TableField<XUnusedRecord, String> NAME_REF = new TableFieldImpl<XUnusedRecord, String>(SQLDialect.MYSQL, "NAME_REF", MySQLDataType.VARCHAR, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> CLASS = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "CLASS", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> FIELDS = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "FIELDS", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> CONFIGURATION = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "CONFIGURATION", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> U_D_T = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "U_D_T", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> META_DATA = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "META_DATA", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> TYPE0 = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "TYPE0", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARY_KEY = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "PRIMARY_KEY", MySQLDataType.INT, X_UNUSED);

	/**
	 * An uncommented item
	 */
	public static final TableField<XUnusedRecord, Integer> PRIMARYKEY = new TableFieldImpl<XUnusedRecord, Integer>(SQLDialect.MYSQL, "PRIMARYKEY", MySQLDataType.INT, X_UNUSED);

	/**
	 * No further instances allowed
	 */
	private XUnused() {
		super(SQLDialect.MYSQL, "x_unused", Test.TEST);
	}

	/*
	 * static initialiser
	 */
	static {
		X_UNUSED.addToMainUniqueKey(ID);
		X_UNUSED.addToMainUniqueKey(NAME);
	}
}
