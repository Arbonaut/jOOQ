/**
 * This class is generated by jOOQ
 */
package org.jooq.util.hsqldb.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.hsqldb.HSQLDBDataType;
import org.jooq.util.hsqldb.information_schema.InformationSchema;
import org.jooq.util.hsqldb.information_schema.tables.records.TablesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Tables extends TableImpl<TablesRecord> {

	private static final long serialVersionUID = 1298728748;

	/**
	 * The singleton instance of TABLES
	 */
	public static final Tables TABLES = new Tables();

	/**
	 * The class holding records for this type
	 */
	private static final Class<TablesRecord> __RECORD_TYPE = TablesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TablesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_CATALOG = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "TABLE_CATALOG", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_SCHEMA = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "TABLE_SCHEMA", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_NAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "TABLE_NAME", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABLE_TYPE = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "TABLE_TYPE", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> SELF_REFERENCING_COLUMN_NAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "SELF_REFERENCING_COLUMN_NAME", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> REFERENCE_GENERATION = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "REFERENCE_GENERATION", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> USER_DEFINED_TYPE_CATALOG = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "USER_DEFINED_TYPE_CATALOG", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> USER_DEFINED_TYPE_SCHEMA = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "USER_DEFINED_TYPE_SCHEMA", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> USER_DEFINED_TYPE_NAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "USER_DEFINED_TYPE_NAME", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> IS_INSERTABLE_INTO = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "IS_INSERTABLE_INTO", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> IS_TYPED = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "IS_TYPED", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COMMIT_ACTION = new TableFieldImpl<TablesRecord, String>(SQLDialect.HSQLDB, "COMMIT_ACTION", HSQLDBDataType.CHARACTERVARYING, TABLES);

	/**
	 * No further instances allowed
	 */
	private Tables() {
		super(SQLDialect.HSQLDB, "TABLES", InformationSchema.INFORMATION_SCHEMA);
	}
}
