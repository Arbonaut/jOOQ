/**
 * This class is generated by jOOQ
 */
package org.jooq.util.mysql.information_schema.tables.records;

import org.jooq.Result;
import org.jooq.impl.RecordImpl;
import org.jooq.util.mysql.information_schema.tables.Schemata;


/**
 * This class is generated by jOOQ.
 */
public class SchemataRecord extends RecordImpl {

	private static final long serialVersionUID = 1L;

	/**
	 * An uncommented item
	 */
	public void setCatalogName(String value) {
		setValue(Schemata.CATALOG_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCatalogName() {
		return getValue(Schemata.CATALOG_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setSchemaName(String value) {
		setValue(Schemata.SCHEMA_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSchemaName() {
		return getValue(Schemata.SCHEMA_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setDefaultCharacterSetName(String value) {
		setValue(Schemata.DEFAULT_CHARACTER_SET_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getDefaultCharacterSetName() {
		return getValue(Schemata.DEFAULT_CHARACTER_SET_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setDefaultCollationName(String value) {
		setValue(Schemata.DEFAULT_COLLATION_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getDefaultCollationName() {
		return getValue(Schemata.DEFAULT_COLLATION_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setSqlPath(String value) {
		setValue(Schemata.SQL_PATH, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSqlPath() {
		return getValue(Schemata.SQL_PATH);
	}

	public SchemataRecord(Result result) {
		super(result);
	}
}
