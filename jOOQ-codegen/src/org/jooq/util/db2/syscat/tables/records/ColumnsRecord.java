/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables.records;


import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.TableRecordImpl;
import org.jooq.util.db2.syscat.tables.Columns;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class ColumnsRecord extends TableRecordImpl<ColumnsRecord> {

	private static final long serialVersionUID = 1571858815;

	/**
	 * An uncommented item
	 */
	public void setTabschema(String value) {
		setValue(Columns.TABSCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTabschema() {
		return getValue(Columns.TABSCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setTabname(String value) {
		setValue(Columns.TABNAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTabname() {
		return getValue(Columns.TABNAME);
	}

	/**
	 * An uncommented item
	 */
	public void setColname(String value) {
		setValue(Columns.COLNAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getColname() {
		return getValue(Columns.COLNAME);
	}

	/**
	 * An uncommented item
	 */
	public void setColno(Short value) {
		setValue(Columns.COLNO, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getColno() {
		return getValue(Columns.COLNO);
	}

	/**
	 * An uncommented item
	 */
	public void setTypeschema(String value) {
		setValue(Columns.TYPESCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTypeschema() {
		return getValue(Columns.TYPESCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setTypename(String value) {
		setValue(Columns.TYPENAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTypename() {
		return getValue(Columns.TYPENAME);
	}

	/**
	 * An uncommented item
	 */
	public void setLength(Integer value) {
		setValue(Columns.LENGTH, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getLength() {
		return getValue(Columns.LENGTH);
	}

	/**
	 * An uncommented item
	 */
	public void setScale(Short value) {
		setValue(Columns.SCALE, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getScale() {
		return getValue(Columns.SCALE);
	}

	/**
	 * An uncommented item
	 */
	public void setDefault(String value) {
		setValue(Columns.DEFAULT, value);
	}

	/**
	 * An uncommented item
	 */
	public String getDefault() {
		return getValue(Columns.DEFAULT);
	}

	/**
	 * An uncommented item
	 */
	public void setNulls(String value) {
		setValue(Columns.NULLS, value);
	}

	/**
	 * An uncommented item
	 */
	public String getNulls() {
		return getValue(Columns.NULLS);
	}

	/**
	 * An uncommented item
	 */
	public void setCodepage(Short value) {
		setValue(Columns.CODEPAGE, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getCodepage() {
		return getValue(Columns.CODEPAGE);
	}

	/**
	 * An uncommented item
	 */
	public void setCollationschema(String value) {
		setValue(Columns.COLLATIONSCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCollationschema() {
		return getValue(Columns.COLLATIONSCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setCollationname(String value) {
		setValue(Columns.COLLATIONNAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCollationname() {
		return getValue(Columns.COLLATIONNAME);
	}

	/**
	 * An uncommented item
	 */
	public void setLogged(String value) {
		setValue(Columns.LOGGED, value);
	}

	/**
	 * An uncommented item
	 */
	public String getLogged() {
		return getValue(Columns.LOGGED);
	}

	/**
	 * An uncommented item
	 */
	public void setCompact(String value) {
		setValue(Columns.COMPACT, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCompact() {
		return getValue(Columns.COMPACT);
	}

	/**
	 * An uncommented item
	 */
	public void setColcard(Long value) {
		setValue(Columns.COLCARD, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getColcard() {
		return getValue(Columns.COLCARD);
	}

	/**
	 * An uncommented item
	 */
	public void setHigh2key(String value) {
		setValue(Columns.HIGH2KEY, value);
	}

	/**
	 * An uncommented item
	 */
	public String getHigh2key() {
		return getValue(Columns.HIGH2KEY);
	}

	/**
	 * An uncommented item
	 */
	public void setLow2key(String value) {
		setValue(Columns.LOW2KEY, value);
	}

	/**
	 * An uncommented item
	 */
	public String getLow2key() {
		return getValue(Columns.LOW2KEY);
	}

	/**
	 * An uncommented item
	 */
	public void setAvgcollen(Integer value) {
		setValue(Columns.AVGCOLLEN, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getAvgcollen() {
		return getValue(Columns.AVGCOLLEN);
	}

	/**
	 * An uncommented item
	 */
	public void setKeyseq(Short value) {
		setValue(Columns.KEYSEQ, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getKeyseq() {
		return getValue(Columns.KEYSEQ);
	}

	/**
	 * An uncommented item
	 */
	public void setPartkeyseq(Short value) {
		setValue(Columns.PARTKEYSEQ, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getPartkeyseq() {
		return getValue(Columns.PARTKEYSEQ);
	}

	/**
	 * An uncommented item
	 */
	public void setNquantiles(Short value) {
		setValue(Columns.NQUANTILES, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getNquantiles() {
		return getValue(Columns.NQUANTILES);
	}

	/**
	 * An uncommented item
	 */
	public void setNmostfreq(Short value) {
		setValue(Columns.NMOSTFREQ, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getNmostfreq() {
		return getValue(Columns.NMOSTFREQ);
	}

	/**
	 * An uncommented item
	 */
	public void setNumnulls(Long value) {
		setValue(Columns.NUMNULLS, value);
	}

	/**
	 * An uncommented item
	 */
	public Long getNumnulls() {
		return getValue(Columns.NUMNULLS);
	}

	/**
	 * An uncommented item
	 */
	public void setTargetTypeschema(String value) {
		setValue(Columns.TARGET_TYPESCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTargetTypeschema() {
		return getValue(Columns.TARGET_TYPESCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setTargetTypename(String value) {
		setValue(Columns.TARGET_TYPENAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTargetTypename() {
		return getValue(Columns.TARGET_TYPENAME);
	}

	/**
	 * An uncommented item
	 */
	public void setScopeTabschema(String value) {
		setValue(Columns.SCOPE_TABSCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getScopeTabschema() {
		return getValue(Columns.SCOPE_TABSCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setScopeTabname(String value) {
		setValue(Columns.SCOPE_TABNAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getScopeTabname() {
		return getValue(Columns.SCOPE_TABNAME);
	}

	/**
	 * An uncommented item
	 */
	public void setSourceTabschema(String value) {
		setValue(Columns.SOURCE_TABSCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSourceTabschema() {
		return getValue(Columns.SOURCE_TABSCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setSourceTabname(String value) {
		setValue(Columns.SOURCE_TABNAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSourceTabname() {
		return getValue(Columns.SOURCE_TABNAME);
	}

	/**
	 * An uncommented item
	 */
	public void setDlFeatures(String value) {
		setValue(Columns.DL_FEATURES, value);
	}

	/**
	 * An uncommented item
	 */
	public String getDlFeatures() {
		return getValue(Columns.DL_FEATURES);
	}

	/**
	 * An uncommented item
	 */
	public void setSpecialProps(String value) {
		setValue(Columns.SPECIAL_PROPS, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSpecialProps() {
		return getValue(Columns.SPECIAL_PROPS);
	}

	/**
	 * An uncommented item
	 */
	public void setHidden(String value) {
		setValue(Columns.HIDDEN, value);
	}

	/**
	 * An uncommented item
	 */
	public String getHidden() {
		return getValue(Columns.HIDDEN);
	}

	/**
	 * An uncommented item
	 */
	public void setInlineLength(Integer value) {
		setValue(Columns.INLINE_LENGTH, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getInlineLength() {
		return getValue(Columns.INLINE_LENGTH);
	}

	/**
	 * An uncommented item
	 */
	public void setPctinlined(Short value) {
		setValue(Columns.PCTINLINED, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getPctinlined() {
		return getValue(Columns.PCTINLINED);
	}

	/**
	 * An uncommented item
	 */
	public void setIdentity(String value) {
		setValue(Columns.IDENTITY, value);
	}

	/**
	 * An uncommented item
	 */
	public String getIdentity() {
		return getValue(Columns.IDENTITY);
	}

	/**
	 * An uncommented item
	 */
	public void setRowchangetimestamp(String value) {
		setValue(Columns.ROWCHANGETIMESTAMP, value);
	}

	/**
	 * An uncommented item
	 */
	public String getRowchangetimestamp() {
		return getValue(Columns.ROWCHANGETIMESTAMP);
	}

	/**
	 * An uncommented item
	 */
	public void setGenerated(String value) {
		setValue(Columns.GENERATED, value);
	}

	/**
	 * An uncommented item
	 */
	public String getGenerated() {
		return getValue(Columns.GENERATED);
	}

	/**
	 * An uncommented item
	 */
	public void setText(String value) {
		setValue(Columns.TEXT, value);
	}

	/**
	 * An uncommented item
	 */
	public String getText() {
		return getValue(Columns.TEXT);
	}

	/**
	 * An uncommented item
	 */
	public void setCompress(String value) {
		setValue(Columns.COMPRESS, value);
	}

	/**
	 * An uncommented item
	 */
	public String getCompress() {
		return getValue(Columns.COMPRESS);
	}

	/**
	 * An uncommented item
	 */
	public void setAvgdistinctperpage(Double value) {
		setValue(Columns.AVGDISTINCTPERPAGE, value);
	}

	/**
	 * An uncommented item
	 */
	public Double getAvgdistinctperpage() {
		return getValue(Columns.AVGDISTINCTPERPAGE);
	}

	/**
	 * An uncommented item
	 */
	public void setPagevarianceratio(Double value) {
		setValue(Columns.PAGEVARIANCERATIO, value);
	}

	/**
	 * An uncommented item
	 */
	public Double getPagevarianceratio() {
		return getValue(Columns.PAGEVARIANCERATIO);
	}

	/**
	 * An uncommented item
	 */
	public void setSubCount(Short value) {
		setValue(Columns.SUB_COUNT, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getSubCount() {
		return getValue(Columns.SUB_COUNT);
	}

	/**
	 * An uncommented item
	 */
	public void setSubDelimLength(Short value) {
		setValue(Columns.SUB_DELIM_LENGTH, value);
	}

	/**
	 * An uncommented item
	 */
	public Short getSubDelimLength() {
		return getValue(Columns.SUB_DELIM_LENGTH);
	}

	/**
	 * An uncommented item
	 */
	public void setAvgcollenchar(Integer value) {
		setValue(Columns.AVGCOLLENCHAR, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getAvgcollenchar() {
		return getValue(Columns.AVGCOLLENCHAR);
	}

	/**
	 * An uncommented item
	 */
	public void setImplicitvalue(String value) {
		setValue(Columns.IMPLICITVALUE, value);
	}

	/**
	 * An uncommented item
	 */
	public String getImplicitvalue() {
		return getValue(Columns.IMPLICITVALUE);
	}

	/**
	 * An uncommented item
	 */
	public void setSeclabelname(String value) {
		setValue(Columns.SECLABELNAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getSeclabelname() {
		return getValue(Columns.SECLABELNAME);
	}

	/**
	 * An uncommented item
	 */
	public void setRemarks(String value) {
		setValue(Columns.REMARKS, value);
	}

	/**
	 * An uncommented item
	 */
	public String getRemarks() {
		return getValue(Columns.REMARKS);
	}

	public ColumnsRecord(Configuration configuration) {
		super(configuration, Columns.COLUMNS);
	}
}
