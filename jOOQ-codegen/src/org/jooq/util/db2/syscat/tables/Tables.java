/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.TablesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Tables extends TableImpl<TablesRecord> {

	private static final long serialVersionUID = -1844226019;

	/**
	 * The singleton instance of TABLES
	 */
	public static final Tables TABLES = new Tables();

	/**
	 * The class holding records for this type
	 */
	private static final Class<TablesRecord> __RECORD_TYPE = TablesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TablesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABSCHEMA = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "TABSCHEMA", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TABNAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "TABNAME", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> OWNER = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "OWNER", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> OWNERTYPE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "OWNERTYPE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TYPE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "TYPE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> STATUS = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "STATUS", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> BASE_TABSCHEMA = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "BASE_TABSCHEMA", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> BASE_TABNAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "BASE_TABNAME", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROWTYPESCHEMA = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "ROWTYPESCHEMA", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROWTYPENAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "ROWTYPENAME", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> CREATE_TIME = new TableFieldImpl<TablesRecord, Timestamp>(SQLDialect.DB2, "CREATE_TIME", Timestamp.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> ALTER_TIME = new TableFieldImpl<TablesRecord, Timestamp>(SQLDialect.DB2, "ALTER_TIME", Timestamp.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> INVALIDATE_TIME = new TableFieldImpl<TablesRecord, Timestamp>(SQLDialect.DB2, "INVALIDATE_TIME", Timestamp.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> STATS_TIME = new TableFieldImpl<TablesRecord, Timestamp>(SQLDialect.DB2, "STATS_TIME", Timestamp.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> COLCOUNT = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "COLCOUNT", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> TABLEID = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "TABLEID", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> TBSPACEID = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "TBSPACEID", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> CARD = new TableFieldImpl<TablesRecord, Long>(SQLDialect.DB2, "CARD", Long.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> NPAGES = new TableFieldImpl<TablesRecord, Long>(SQLDialect.DB2, "NPAGES", Long.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> FPAGES = new TableFieldImpl<TablesRecord, Long>(SQLDialect.DB2, "FPAGES", Long.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> OVERFLOW = new TableFieldImpl<TablesRecord, Long>(SQLDialect.DB2, "OVERFLOW", Long.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> TBSPACE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "TBSPACE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> INDEX_TBSPACE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "INDEX_TBSPACE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LONG_TBSPACE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "LONG_TBSPACE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PARENTS = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "PARENTS", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> CHILDREN = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "CHILDREN", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> SELFREFS = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "SELFREFS", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> KEYCOLUMNS = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "KEYCOLUMNS", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> KEYINDEXID = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "KEYINDEXID", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> KEYUNIQUE = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "KEYUNIQUE", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> CHECKCOUNT = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "CHECKCOUNT", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> DATACAPTURE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "DATACAPTURE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> CONST_CHECKED = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "CONST_CHECKED", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PMAP_ID = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "PMAP_ID", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> PARTITION_MODE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "PARTITION_MODE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOG_ATTRIBUTE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "LOG_ATTRIBUTE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PCTFREE = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "PCTFREE", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> APPEND_MODE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "APPEND_MODE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> REFRESH = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "REFRESH", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> REFRESH_TIME = new TableFieldImpl<TablesRecord, Timestamp>(SQLDialect.DB2, "REFRESH_TIME", Timestamp.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOCKSIZE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "LOCKSIZE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> VOLATILE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "VOLATILE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ROW_FORMAT = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "ROW_FORMAT", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> PROPERTY = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "PROPERTY", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> STATISTICS_PROFILE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "STATISTICS_PROFILE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COMPRESSION = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "COMPRESSION", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ACCESS_MODE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "ACCESS_MODE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> CLUSTERED = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "CLUSTERED", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Long> ACTIVE_BLOCKS = new TableFieldImpl<TablesRecord, Long>(SQLDialect.DB2, "ACTIVE_BLOCKS", Long.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> DROPRULE = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "DROPRULE", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> MAXFREESPACESEARCH = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "MAXFREESPACESEARCH", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> AVGCOMPRESSEDROWSIZE = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "AVGCOMPRESSEDROWSIZE", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Float> AVGROWCOMPRESSIONRATIO = new TableFieldImpl<TablesRecord, Float>(SQLDialect.DB2, "AVGROWCOMPRESSIONRATIO", Float.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> AVGROWSIZE = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "AVGROWSIZE", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Float> PCTROWSCOMPRESSED = new TableFieldImpl<TablesRecord, Float>(SQLDialect.DB2, "PCTROWSCOMPRESSED", Float.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> LOGINDEXBUILD = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "LOGINDEXBUILD", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> CODEPAGE = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "CODEPAGE", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONSCHEMA = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "COLLATIONSCHEMA", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONNAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "COLLATIONNAME", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONSCHEMA_ORDERBY = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "COLLATIONSCHEMA_ORDERBY", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> COLLATIONNAME_ORDERBY = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "COLLATIONNAME_ORDERBY", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> ENCODING_SCHEME = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "ENCODING_SCHEME", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Short> PCTPAGESSAVED = new TableFieldImpl<TablesRecord, Short>(SQLDialect.DB2, "PCTPAGESSAVED", Short.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Timestamp> LAST_REGEN_TIME = new TableFieldImpl<TablesRecord, Timestamp>(SQLDialect.DB2, "LAST_REGEN_TIME", Timestamp.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Integer> SECPOLICYID = new TableFieldImpl<TablesRecord, Integer>(SQLDialect.DB2, "SECPOLICYID", Integer.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> PROTECTIONGRANULARITY = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "PROTECTIONGRANULARITY", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, Integer> AUDITPOLICYID = new TableFieldImpl<TablesRecord, Integer>(SQLDialect.DB2, "AUDITPOLICYID", Integer.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> AUDITPOLICYNAME = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "AUDITPOLICYNAME", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> DEFINER = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "DEFINER", String.class, TABLES);

	/**
	 * An uncommented item
	 */
	public static final TableField<TablesRecord, String> REMARKS = new TableFieldImpl<TablesRecord, String>(SQLDialect.DB2, "REMARKS", String.class, TABLES);

	/**
	 * No further instances allowed
	 */
	private Tables() {
		super(SQLDialect.DB2, "TABLES", Syscat.SYSCAT);
	}

}
