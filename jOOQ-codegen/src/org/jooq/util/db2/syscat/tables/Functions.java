/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.FunctionsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Functions extends TableImpl<FunctionsRecord> {

	private static final long serialVersionUID = -417141544;

	/**
	 * The singleton instance of FUNCTIONS
	 */
	public static final Functions FUNCTIONS = new Functions();

	/**
	 * The class holding records for this type
	 */
	private static final Class<FunctionsRecord> __RECORD_TYPE = FunctionsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<FunctionsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FUNCSCHEMA = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "FUNCSCHEMA", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FUNCNAME = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "FUNCNAME", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SPECIFICNAME = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SPECIFICNAME", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> DEFINER = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "DEFINER", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Integer> FUNCID = new TableFieldImpl<FunctionsRecord, Integer>(SQLDialect.DB2, "FUNCID", Integer.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> RETURN_TYPE = new TableFieldImpl<FunctionsRecord, Short>(SQLDialect.DB2, "RETURN_TYPE", Short.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> ORIGIN = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "ORIGIN", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> TYPE = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "TYPE", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> METHOD = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "METHOD", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> EFFECT = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "EFFECT", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> PARM_COUNT = new TableFieldImpl<FunctionsRecord, Short>(SQLDialect.DB2, "PARM_COUNT", Short.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> PARM_SIGNATURE = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "PARM_SIGNATURE", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Timestamp> CREATE_TIME = new TableFieldImpl<FunctionsRecord, Timestamp>(SQLDialect.DB2, "CREATE_TIME", Timestamp.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> QUALIFIER = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "QUALIFIER", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> WITH_FUNC_ACCESS = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "WITH_FUNC_ACCESS", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> TYPE_PRESERVING = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "TYPE_PRESERVING", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> VARIANT = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "VARIANT", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SIDE_EFFECTS = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SIDE_EFFECTS", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FENCED = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "FENCED", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> NULLCALL = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "NULLCALL", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> CAST_FUNCTION = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "CAST_FUNCTION", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> ASSIGN_FUNCTION = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "ASSIGN_FUNCTION", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SCRATCHPAD = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SCRATCHPAD", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FINAL_CALL = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "FINAL_CALL", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> PARALLELIZABLE = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "PARALLELIZABLE", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> CONTAINS_SQL = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "CONTAINS_SQL", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> DBINFO = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "DBINFO", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> RESULT_COLS = new TableFieldImpl<FunctionsRecord, Short>(SQLDialect.DB2, "RESULT_COLS", Short.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> LANGUAGE = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "LANGUAGE", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> IMPLEMENTATION = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "IMPLEMENTATION", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> CLASS = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "CLASS", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> JAR_ID = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "JAR_ID", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> PARM_STYLE = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "PARM_STYLE", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SOURCE_SCHEMA = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SOURCE_SCHEMA", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SOURCE_SPECIFIC = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SOURCE_SPECIFIC", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> IOS_PER_INVOC = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "IOS_PER_INVOC", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INSTS_PER_INVOC = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "INSTS_PER_INVOC", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> IOS_PER_ARGBYTE = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "IOS_PER_ARGBYTE", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INSTS_PER_ARGBYTE = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "INSTS_PER_ARGBYTE", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Short> PERCENT_ARGBYTES = new TableFieldImpl<FunctionsRecord, Short>(SQLDialect.DB2, "PERCENT_ARGBYTES", Short.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INITIAL_IOS = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "INITIAL_IOS", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> INITIAL_INSTS = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "INITIAL_INSTS", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Long> CARDINALITY = new TableFieldImpl<FunctionsRecord, Long>(SQLDialect.DB2, "CARDINALITY", Long.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> IMPLEMENTED = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "IMPLEMENTED", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Double> SELECTIVITY = new TableFieldImpl<FunctionsRecord, Double>(SQLDialect.DB2, "SELECTIVITY", Double.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, Integer> OVERRIDDEN_FUNCID = new TableFieldImpl<FunctionsRecord, Integer>(SQLDialect.DB2, "OVERRIDDEN_FUNCID", Integer.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SUBJECT_TYPESCHEMA = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SUBJECT_TYPESCHEMA", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> SUBJECT_TYPENAME = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "SUBJECT_TYPENAME", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> FUNC_PATH = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "FUNC_PATH", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> BODY = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "BODY", String.class, FUNCTIONS);

	/**
	 * An uncommented item
	 */
	public static final TableField<FunctionsRecord, String> REMARKS = new TableFieldImpl<FunctionsRecord, String>(SQLDialect.DB2, "REMARKS", String.class, FUNCTIONS);

	/**
	 * No further instances allowed
	 */
	private Functions() {
		super(SQLDialect.DB2, "FUNCTIONS", Syscat.SYSCAT);
	}

}
