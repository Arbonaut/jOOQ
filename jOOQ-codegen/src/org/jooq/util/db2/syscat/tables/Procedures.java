/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.ProceduresRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Procedures extends TableImpl<ProceduresRecord> {

	private static final long serialVersionUID = -1452694678;

	/**
	 * The singleton instance of PROCEDURES
	 */
	public static final Procedures PROCEDURES = new Procedures();

	/**
	 * The class holding records for this type
	 */
	private static final Class<ProceduresRecord> __RECORD_TYPE = ProceduresRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProceduresRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> PROCSCHEMA = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "PROCSCHEMA", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> PROCNAME = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "PROCNAME", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> SPECIFICNAME = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "SPECIFICNAME", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, Integer> PROCEDURE_ID = new TableFieldImpl<ProceduresRecord, Integer>(SQLDialect.DB2, "PROCEDURE_ID", Integer.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> DEFINER = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "DEFINER", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, Short> PARM_COUNT = new TableFieldImpl<ProceduresRecord, Short>(SQLDialect.DB2, "PARM_COUNT", Short.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> PARM_SIGNATURE = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "PARM_SIGNATURE", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> ORIGIN = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "ORIGIN", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, Timestamp> CREATE_TIME = new TableFieldImpl<ProceduresRecord, Timestamp>(SQLDialect.DB2, "CREATE_TIME", Timestamp.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> DETERMINISTIC = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "DETERMINISTIC", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> FENCED = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "FENCED", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> NULLCALL = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "NULLCALL", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> LANGUAGE = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "LANGUAGE", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> IMPLEMENTATION = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "IMPLEMENTATION", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> CLASS = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "CLASS", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> JAR_ID = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "JAR_ID", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> PARM_STYLE = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "PARM_STYLE", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> CONTAINS_SQL = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "CONTAINS_SQL", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> DBINFO = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "DBINFO", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> PROGRAM_TYPE = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "PROGRAM_TYPE", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, Short> RESULT_SETS = new TableFieldImpl<ProceduresRecord, Short>(SQLDialect.DB2, "RESULT_SETS", Short.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> VALID = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "VALID", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, Integer> TEXT_BODY_OFFSET = new TableFieldImpl<ProceduresRecord, Integer>(SQLDialect.DB2, "TEXT_BODY_OFFSET", Integer.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> TEXT = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "TEXT", String.class, PROCEDURES);

	/**
	 * An uncommented item
	 */
	public static final TableField<ProceduresRecord, String> REMARKS = new TableFieldImpl<ProceduresRecord, String>(SQLDialect.DB2, "REMARKS", String.class, PROCEDURES);

	/**
	 * No further instances allowed
	 */
	private Procedures() {
		super(SQLDialect.DB2, "PROCEDURES", Syscat.SYSCAT);
	}

}
