/**
 * This class is generated by jOOQ
 */
package org.jooq.util.db2.syscat.tables;


import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.db2.syscat.Syscat;
import org.jooq.util.db2.syscat.tables.records.TabconstRecord;


/**
 * This class is generated by jOOQ.
 */
public class Tabconst extends TableImpl<TabconstRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * The singleton instance of TABCONST
	 */
	public static final Tabconst TABCONST = new Tabconst();

	/**
	 * The class holding records for this type
	 */
	private static final Class<TabconstRecord> __RECORD_TYPE = TabconstRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TabconstRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> CONSTNAME = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "CONSTNAME", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> TABSCHEMA = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "TABSCHEMA", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> TABNAME = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "TABNAME", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> OWNER = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "OWNER", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> OWNERTYPE = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "OWNERTYPE", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> TYPE = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "TYPE", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> ENFORCED = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "ENFORCED", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> CHECKEXISTINGDATA = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "CHECKEXISTINGDATA", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> ENABLEQUERYOPT = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "ENABLEQUERYOPT", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> DEFINER = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "DEFINER", String.class, TABCONST);

	/**
	 * An uncommented item
	 */
	public static final TableField<TabconstRecord, String> REMARKS = new TableFieldImpl<TabconstRecord, String>(SQLDialect.DB2, "REMARKS", String.class, TABCONST);

	/**
	 * No further instances allowed
	 */
	private Tabconst() {
		super(SQLDialect.DB2, "TABCONST", Syscat.SYSCAT);
	}

}
