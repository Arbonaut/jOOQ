/**
 * This class is generated by jOOQ
 */
package org.jooq.util.h2.information_schema.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.h2.H2DataType;
import org.jooq.util.h2.information_schema.InformationSchema;
import org.jooq.util.h2.information_schema.tables.records.SequencesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class Sequences extends TableImpl<SequencesRecord> {

	private static final long serialVersionUID = -1018144868;

	/**
	 * The singleton instance of SEQUENCES
	 */
	public static final Sequences SEQUENCES = new Sequences();

	/**
	 * The class holding records for this type
	 */
	private static final Class<SequencesRecord> __RECORD_TYPE = SequencesRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SequencesRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, String> SEQUENCE_CATALOG = new TableFieldImpl<SequencesRecord, String>(SQLDialect.H2, "SEQUENCE_CATALOG", H2DataType.VARCHAR, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, String> SEQUENCE_SCHEMA = new TableFieldImpl<SequencesRecord, String>(SQLDialect.H2, "SEQUENCE_SCHEMA", H2DataType.VARCHAR, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, String> SEQUENCE_NAME = new TableFieldImpl<SequencesRecord, String>(SQLDialect.H2, "SEQUENCE_NAME", H2DataType.VARCHAR, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, Long> CURRENT_VALUE = new TableFieldImpl<SequencesRecord, Long>(SQLDialect.H2, "CURRENT_VALUE", H2DataType.BIGINT, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, Long> INCREMENT = new TableFieldImpl<SequencesRecord, Long>(SQLDialect.H2, "INCREMENT", H2DataType.BIGINT, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, Boolean> IS_GENERATED = new TableFieldImpl<SequencesRecord, Boolean>(SQLDialect.H2, "IS_GENERATED", H2DataType.BOOLEAN, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, String> REMARKS = new TableFieldImpl<SequencesRecord, String>(SQLDialect.H2, "REMARKS", H2DataType.VARCHAR, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, Long> CACHE = new TableFieldImpl<SequencesRecord, Long>(SQLDialect.H2, "CACHE", H2DataType.BIGINT, SEQUENCES);

	/**
	 * An uncommented item
	 */
	public static final TableField<SequencesRecord, Integer> ID = new TableFieldImpl<SequencesRecord, Integer>(SQLDialect.H2, "ID", H2DataType.INTEGER, SEQUENCES);

	/**
	 * No further instances allowed
	 */
	private Sequences() {
		super(SQLDialect.H2, "SEQUENCES", InformationSchema.INFORMATION_SCHEMA);
	}
}
