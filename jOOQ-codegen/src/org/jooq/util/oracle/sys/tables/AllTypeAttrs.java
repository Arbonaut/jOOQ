/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;


import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.OracleDataType;
import org.jooq.util.oracle.sys.Sys;
import org.jooq.util.oracle.sys.tables.records.AllTypeAttrsRecord;


/**
 * This class is generated by jOOQ.
 *
 * Description of attributes of types accessible to the user
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class AllTypeAttrs extends TableImpl<AllTypeAttrsRecord> {

	private static final long serialVersionUID = -461401373;

	/**
	 * The singleton instance of ALL_TYPE_ATTRS
	 */
	public static final AllTypeAttrs ALL_TYPE_ATTRS = new AllTypeAttrs();

	/**
	 * The class holding records for this type
	 */
	private static final Class<AllTypeAttrsRecord> __RECORD_TYPE = AllTypeAttrsRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<AllTypeAttrsRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * Owner of the type
	 */
	public static final TableField<AllTypeAttrsRecord, String> OWNER = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "OWNER", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Name of the type
	 */
	public static final TableField<AllTypeAttrsRecord, String> TYPE_NAME = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "TYPE_NAME", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Name of the attribute
	 */
	public static final TableField<AllTypeAttrsRecord, String> ATTR_NAME = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "ATTR_NAME", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Type modifier of the attribute
	 */
	public static final TableField<AllTypeAttrsRecord, String> ATTR_TYPE_MOD = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "ATTR_TYPE_MOD", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Owner of the type of the attribute
	 */
	public static final TableField<AllTypeAttrsRecord, String> ATTR_TYPE_OWNER = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "ATTR_TYPE_OWNER", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Name of the type of the attribute
	 */
	public static final TableField<AllTypeAttrsRecord, String> ATTR_TYPE_NAME = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "ATTR_TYPE_NAME", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Length of the CHAR attribute or maximum length of the VARCHAR
or VARCHAR2 attribute
	 */
	public static final TableField<AllTypeAttrsRecord, BigDecimal> LENGTH = new TableFieldImpl<AllTypeAttrsRecord, BigDecimal>(SQLDialect.ORACLE, "LENGTH", OracleDataType.NUMBER, ALL_TYPE_ATTRS);

	/**
	 * Decimal precision of the NUMBER or DECIMAL attribute or
binary precision of the FLOAT attribute
	 */
	public static final TableField<AllTypeAttrsRecord, BigDecimal> PRECISION = new TableFieldImpl<AllTypeAttrsRecord, BigDecimal>(SQLDialect.ORACLE, "PRECISION", OracleDataType.NUMBER, ALL_TYPE_ATTRS);

	/**
	 * Scale of the NUMBER or DECIMAL attribute
	 */
	public static final TableField<AllTypeAttrsRecord, BigDecimal> SCALE = new TableFieldImpl<AllTypeAttrsRecord, BigDecimal>(SQLDialect.ORACLE, "SCALE", OracleDataType.NUMBER, ALL_TYPE_ATTRS);

	/**
	 * Character set name of the attribute
	 */
	public static final TableField<AllTypeAttrsRecord, String> CHARACTER_SET_NAME = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "CHARACTER_SET_NAME", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * Syntactical order number or position of the attribute as specified in the
type specification or CREATE TYPE statement (not to be used as ID number)
	 */
	public static final TableField<AllTypeAttrsRecord, BigDecimal> ATTR_NO = new TableFieldImpl<AllTypeAttrsRecord, BigDecimal>(SQLDialect.ORACLE, "ATTR_NO", OracleDataType.NUMBER, ALL_TYPE_ATTRS);

	/**
	 * Is the attribute inherited from the supertype ?
	 */
	public static final TableField<AllTypeAttrsRecord, String> INHERITED = new TableFieldImpl<AllTypeAttrsRecord, String>(SQLDialect.ORACLE, "INHERITED", OracleDataType.VARCHAR2, ALL_TYPE_ATTRS);

	/**
	 * No further instances allowed
	 */
	private AllTypeAttrs() {
		super(SQLDialect.ORACLE, "ALL_TYPE_ATTRS", Sys.SYS);
	}
}
