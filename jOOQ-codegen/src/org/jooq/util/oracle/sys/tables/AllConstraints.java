/**
 * This class is generated by jOOQ
 */
package org.jooq.util.oracle.sys.tables;

import java.sql.Date;

import org.jooq.TableField;
import org.jooq.impl.DefaultRecord;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.oracle.sys.Sys;


/**
 * This class is generated by jOOQ.
 *
 * Constraint definitions on accessible tables
 */
public class AllConstraints extends TableImpl<DefaultRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * The singleton instance of ALL_CONSTRAINTS
	 */
	public static final AllConstraints ALL_CONSTRAINTS = new AllConstraints();

	/**
	 * Owner of the table
	 */
	public static final TableField<DefaultRecord, String> OWNER = new TableFieldImpl<DefaultRecord, String>("OWNER", String.class, ALL_CONSTRAINTS);

	/**
	 * Name associated with constraint definition
	 */
	public static final TableField<DefaultRecord, String> CONSTRAINT_NAME = new TableFieldImpl<DefaultRecord, String>("CONSTRAINT_NAME", String.class, ALL_CONSTRAINTS);

	/**
	 * Type of constraint definition
	 */
	public static final TableField<DefaultRecord, String> CONSTRAINT_TYPE = new TableFieldImpl<DefaultRecord, String>("CONSTRAINT_TYPE", String.class, ALL_CONSTRAINTS);

	/**
	 * Name associated with table with constraint definition
	 */
	public static final TableField<DefaultRecord, String> TABLE_NAME = new TableFieldImpl<DefaultRecord, String>("TABLE_NAME", String.class, ALL_CONSTRAINTS);

	/**
	 * Text of search condition for table check
	 */
	public static final TableField<DefaultRecord, String> SEARCH_CONDITION = new TableFieldImpl<DefaultRecord, String>("SEARCH_CONDITION", String.class, ALL_CONSTRAINTS);

	/**
	 * Owner of table used in referential constraint
	 */
	public static final TableField<DefaultRecord, String> R_OWNER = new TableFieldImpl<DefaultRecord, String>("R_OWNER", String.class, ALL_CONSTRAINTS);

	/**
	 * Name of unique constraint definition for referenced table
	 */
	public static final TableField<DefaultRecord, String> R_CONSTRAINT_NAME = new TableFieldImpl<DefaultRecord, String>("R_CONSTRAINT_NAME", String.class, ALL_CONSTRAINTS);

	/**
	 * The delete rule for a referential constraint
	 */
	public static final TableField<DefaultRecord, String> DELETE_RULE = new TableFieldImpl<DefaultRecord, String>("DELETE_RULE", String.class, ALL_CONSTRAINTS);

	/**
	 * Enforcement status of constraint - ENABLED or DISABLED
	 */
	public static final TableField<DefaultRecord, String> STATUS = new TableFieldImpl<DefaultRecord, String>("STATUS", String.class, ALL_CONSTRAINTS);

	/**
	 * Is the constraint deferrable - DEFERRABLE or NOT DEFERRABLE
	 */
	public static final TableField<DefaultRecord, String> DEFERRABLE = new TableFieldImpl<DefaultRecord, String>("DEFERRABLE", String.class, ALL_CONSTRAINTS);

	/**
	 * Is the constraint deferred by default -  DEFERRED or IMMEDIATE
	 */
	public static final TableField<DefaultRecord, String> DEFERRED = new TableFieldImpl<DefaultRecord, String>("DEFERRED", String.class, ALL_CONSTRAINTS);

	/**
	 * Was this constraint system validated? -  VALIDATED or NOT VALIDATED
	 */
	public static final TableField<DefaultRecord, String> VALIDATED = new TableFieldImpl<DefaultRecord, String>("VALIDATED", String.class, ALL_CONSTRAINTS);

	/**
	 * Was the constraint name system generated? -  GENERATED NAME or USER NAME
	 */
	public static final TableField<DefaultRecord, String> GENERATED = new TableFieldImpl<DefaultRecord, String>("GENERATED", String.class, ALL_CONSTRAINTS);

	/**
	 * Creating this constraint should give ORA-02436.  Rewrite it before 2000 AD.
	 */
	public static final TableField<DefaultRecord, String> BAD = new TableFieldImpl<DefaultRecord, String>("BAD", String.class, ALL_CONSTRAINTS);

	/**
	 * If set, this flag will be used in optimizer
	 */
	public static final TableField<DefaultRecord, String> RELY = new TableFieldImpl<DefaultRecord, String>("RELY", String.class, ALL_CONSTRAINTS);

	/**
	 * The date when this column was last enabled or disabled
	 */
	public static final TableField<DefaultRecord, Date> LAST_CHANGE = new TableFieldImpl<DefaultRecord, Date>("LAST_CHANGE", Date.class, ALL_CONSTRAINTS);

	/**
	 * The owner of the index used by this constraint
	 */
	public static final TableField<DefaultRecord, String> INDEX_OWNER = new TableFieldImpl<DefaultRecord, String>("INDEX_OWNER", String.class, ALL_CONSTRAINTS);

	/**
	 * The index used by this constraint
	 */
	public static final TableField<DefaultRecord, String> INDEX_NAME = new TableFieldImpl<DefaultRecord, String>("INDEX_NAME", String.class, ALL_CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<DefaultRecord, String> INVALID = new TableFieldImpl<DefaultRecord, String>("INVALID", String.class, ALL_CONSTRAINTS);

	/**
	 * An uncommented item
	 */
	public static final TableField<DefaultRecord, String> VIEW_RELATED = new TableFieldImpl<DefaultRecord, String>("VIEW_RELATED", String.class, ALL_CONSTRAINTS);

	/**
	 * No further instances allowed
	 */
	private AllConstraints() {
		super("ALL_CONSTRAINTS", Sys.SYS);
	}
}
