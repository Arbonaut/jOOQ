/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.information_schema.tables.records;


import org.jooq.FieldProvider;
import org.jooq.SQLDialect;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableRecordImpl;
import org.jooq.util.postgres.information_schema.tables.KeyColumnUsage;


/**
 * This class is generated by jOOQ.
 */
public class KeyColumnUsageRecord extends TableRecordImpl<KeyColumnUsageRecord> {

	private static final long serialVersionUID = 1L;

	/**
	 * An uncommented item
	 */
	public void setConstraintCatalog(String value) {
		setValue(KeyColumnUsage.CONSTRAINT_CATALOG, value);
	}

	/**
	 * An uncommented item
	 */
	public String getConstraintCatalog() {
		return getValue(KeyColumnUsage.CONSTRAINT_CATALOG);
	}

	/**
	 * An uncommented item
	 */
	public void setConstraintSchema(String value) {
		setValue(KeyColumnUsage.CONSTRAINT_SCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getConstraintSchema() {
		return getValue(KeyColumnUsage.CONSTRAINT_SCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setConstraintName(String value) {
		setValue(KeyColumnUsage.CONSTRAINT_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getConstraintName() {
		return getValue(KeyColumnUsage.CONSTRAINT_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setTableCatalog(String value) {
		setValue(KeyColumnUsage.TABLE_CATALOG, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTableCatalog() {
		return getValue(KeyColumnUsage.TABLE_CATALOG);
	}

	/**
	 * An uncommented item
	 */
	public void setTableSchema(String value) {
		setValue(KeyColumnUsage.TABLE_SCHEMA, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTableSchema() {
		return getValue(KeyColumnUsage.TABLE_SCHEMA);
	}

	/**
	 * An uncommented item
	 */
	public void setTableName(String value) {
		setValue(KeyColumnUsage.TABLE_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getTableName() {
		return getValue(KeyColumnUsage.TABLE_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setColumnName(String value) {
		setValue(KeyColumnUsage.COLUMN_NAME, value);
	}

	/**
	 * An uncommented item
	 */
	public String getColumnName() {
		return getValue(KeyColumnUsage.COLUMN_NAME);
	}

	/**
	 * An uncommented item
	 */
	public void setOrdinalPosition(Integer value) {
		setValue(KeyColumnUsage.ORDINAL_POSITION, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getOrdinalPosition() {
		return getValue(KeyColumnUsage.ORDINAL_POSITION);
	}

	/**
	 * An uncommented item
	 */
	public void setPositionInUniqueConstraint(Integer value) {
		setValue(KeyColumnUsage.POSITION_IN_UNIQUE_CONSTRAINT, value);
	}

	/**
	 * An uncommented item
	 */
	public Integer getPositionInUniqueConstraint() {
		return getValue(KeyColumnUsage.POSITION_IN_UNIQUE_CONSTRAINT);
	}

	/**
	 * This constructor has no effect, as a {@link TableFieldImpl} will always
	 * use its underlying table as a FieldProvider descriptor
	 */
	public KeyColumnUsageRecord(FieldProvider metaData) {
		this();
	}

	public KeyColumnUsageRecord() {
		super(SQLDialect.POSTGRES, KeyColumnUsage.KEY_COLUMN_USAGE);
	}
}
