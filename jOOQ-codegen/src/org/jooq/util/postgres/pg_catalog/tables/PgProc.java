/**
 * This class is generated by jOOQ
 */
package org.jooq.util.postgres.pg_catalog.tables;


import javax.annotation.Generated;

import org.jooq.SQLDialect;
import org.jooq.TableField;
import org.jooq.impl.TableFieldImpl;
import org.jooq.impl.TableImpl;
import org.jooq.util.postgres.PostgresDataType;
import org.jooq.util.postgres.pg_catalog.PgCatalog;
import org.jooq.util.postgres.pg_catalog.tables.records.PgProcRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(value    = "http://jooq.sourceforge.net",
           comments = "This class is generated by jOOQ")
public class PgProc extends TableImpl<PgProcRecord> {

	private static final long serialVersionUID = 1709307882;

	/**
	 * The singleton instance of pg_proc
	 */
	public static final PgProc PG_PROC = new PgProc();

	/**
	 * The class holding records for this type
	 */
	private static final Class<PgProcRecord> __RECORD_TYPE = PgProcRecord.class;

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PgProcRecord> getRecordType() {
		return __RECORD_TYPE;
	}

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PRONAME = new TableFieldImpl<PgProcRecord, String>(SQLDialect.POSTGRES, "proname", PostgresDataType.NAME, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PRONAMESPACE = new TableFieldImpl<PgProcRecord, Long>(SQLDialect.POSTGRES, "pronamespace", PostgresDataType.OID, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PROOWNER = new TableFieldImpl<PgProcRecord, Long>(SQLDialect.POSTGRES, "proowner", PostgresDataType.OID, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PROLANG = new TableFieldImpl<PgProcRecord, Long>(SQLDialect.POSTGRES, "prolang", PostgresDataType.OID, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Float> PROCOST = new TableFieldImpl<PgProcRecord, Float>(SQLDialect.POSTGRES, "procost", PostgresDataType.REAL, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Float> PROROWS = new TableFieldImpl<PgProcRecord, Float>(SQLDialect.POSTGRES, "prorows", PostgresDataType.REAL, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PROVARIADIC = new TableFieldImpl<PgProcRecord, Long>(SQLDialect.POSTGRES, "provariadic", PostgresDataType.OID, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROISAGG = new TableFieldImpl<PgProcRecord, Boolean>(SQLDialect.POSTGRES, "proisagg", PostgresDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROISWINDOW = new TableFieldImpl<PgProcRecord, Boolean>(SQLDialect.POSTGRES, "proiswindow", PostgresDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROSECDEF = new TableFieldImpl<PgProcRecord, Boolean>(SQLDialect.POSTGRES, "prosecdef", PostgresDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PROISSTRICT = new TableFieldImpl<PgProcRecord, Boolean>(SQLDialect.POSTGRES, "proisstrict", PostgresDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Boolean> PRORETSET = new TableFieldImpl<PgProcRecord, Boolean>(SQLDialect.POSTGRES, "proretset", PostgresDataType.BOOLEAN, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROVOLATILE = new TableFieldImpl<PgProcRecord, String>(SQLDialect.POSTGRES, "provolatile", PostgresDataType.CHAR, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Short> PRONARGS = new TableFieldImpl<PgProcRecord, Short>(SQLDialect.POSTGRES, "pronargs", PostgresDataType.SMALLINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Short> PRONARGDEFAULTS = new TableFieldImpl<PgProcRecord, Short>(SQLDialect.POSTGRES, "pronargdefaults", PostgresDataType.SMALLINT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long> PRORETTYPE = new TableFieldImpl<PgProcRecord, Long>(SQLDialect.POSTGRES, "prorettype", PostgresDataType.OID, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long[]> PROARGTYPES = new TableFieldImpl<PgProcRecord, Long[]>(SQLDialect.POSTGRES, "proargtypes", PostgresDataType.OIDVECTOR.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, Long[]> PROALLARGTYPES = new TableFieldImpl<PgProcRecord, Long[]>(SQLDialect.POSTGRES, "proallargtypes", PostgresDataType.OID.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROARGMODES = new TableFieldImpl<PgProcRecord, String[]>(SQLDialect.POSTGRES, "proargmodes", PostgresDataType.CHAR.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROARGNAMES = new TableFieldImpl<PgProcRecord, String[]>(SQLDialect.POSTGRES, "proargnames", PostgresDataType.TEXT.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROARGDEFAULTS = new TableFieldImpl<PgProcRecord, String>(SQLDialect.POSTGRES, "proargdefaults", PostgresDataType.TEXT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROSRC = new TableFieldImpl<PgProcRecord, String>(SQLDialect.POSTGRES, "prosrc", PostgresDataType.TEXT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String> PROBIN = new TableFieldImpl<PgProcRecord, String>(SQLDialect.POSTGRES, "probin", PostgresDataType.TEXT, PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROCONFIG = new TableFieldImpl<PgProcRecord, String[]>(SQLDialect.POSTGRES, "proconfig", PostgresDataType.TEXT.getArrayDataType(), PG_PROC);

	/**
	 * An uncommented item
	 */
	public static final TableField<PgProcRecord, String[]> PROACL = new TableFieldImpl<PgProcRecord, String[]>(SQLDialect.POSTGRES, "proacl", PostgresDataType.ACLITEM.getArrayDataType(), PG_PROC);

	/**
	 * No further instances allowed
	 */
	private PgProc() {
		super(SQLDialect.POSTGRES, "pg_proc", PgCatalog.PG_CATALOG);
	}
}
